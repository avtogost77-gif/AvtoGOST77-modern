#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Service Worker –¥–ª—è SEO
# –û–±–Ω–æ–≤–ª—è–µ—Ç SW –¥–ª—è –ª—É—á—à–µ–π –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–æ–≤—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏

echo "üîß –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Service Worker –¥–ª—è SEO..."

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é Service Worker
cat > sw.js << 'EOF'
const CACHE_NAME = 'avtogost77-v4.0-seo-optimized';
const urlsToCache = [
    '/',
    '/index.html',
    '/services.html',
    '/contact.html',
    '/about.html',
    '/assets/css/master/master-styles.min.css',
    '/assets/css/unified-site-styles.css',
    '/assets/css/critical-fixes.css',
    '/assets/js/smart-calculator-v2.js',
    '/assets/js/distance-api.js',
    '/assets/js/preview-calculator.js',
    '/favicon.svg',
    '/manifest.json'
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker
self.addEventListener('install', event => {
    console.log('üöÄ SW v4.0 SEO Optimized: —É—Å—Ç–∞–Ω–æ–≤–∫–∞...');
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then(cache => {
                console.log('‚úÖ –ö–µ—à –æ—Ç–∫—Ä—ã—Ç');
                return cache.addAll(urlsToCache);
            })
    );
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è Service Worker
self.addEventListener('activate', event => {
    console.log('üîÑ SW v4.0 SEO Optimized: –∞–∫—Ç–∏–≤–∞—Ü–∏—è...');
    event.waitUntil(
        caches.keys().then(cacheNames => {
            return Promise.all(
                cacheNames.map(cacheName => {
                    if (cacheName !== CACHE_NAME) {
                        console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–µ—à:', cacheName);
                        return caches.delete(cacheName);
                    }
                })
            );
        })
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
self.addEventListener('fetch', event => {
    const url = new URL(event.request.url);
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∫ –ø–æ–∏—Å–∫–æ–≤—ã–º —Ä–æ–±–æ—Ç–∞–º
    if (event.request.headers.get('user-agent') && 
        (event.request.headers.get('user-agent').includes('bot') ||
         event.request.headers.get('user-agent').includes('crawler') ||
         event.request.headers.get('user-agent').includes('spider'))) {
        console.log('ü§ñ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ —Ä–æ–±–æ—Ç–∞:', url.pathname);
        event.respondWith(fetch(event.request));
        return;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ sitemap –∏ robots.txt
    if (url.pathname === '/sitemap.xml' || url.pathname === '/robots.txt') {
        console.log('üìã –ü—Ä–æ–ø—É—Å–∫–∞–µ–º SEO —Ñ–∞–π–ª:', url.pathname);
        event.respondWith(fetch(event.request));
        return;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ
    if (url.hostname.includes('google-analytics') || 
        url.hostname.includes('googletagmanager') ||
        url.hostname.includes('mc.yandex') ||
        url.hostname.includes('yandex')) {
        event.respondWith(fetch(event.request));
        return;
    }
    
    // –°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è HTML —Å—Ç—Ä–∞–Ω–∏—Ü: Network First
    if (event.request.headers.get('accept') && 
        event.request.headers.get('accept').includes('text/html')) {
        event.respondWith(
            fetch(event.request)
                .then(response => {
                    // –ö–µ—à–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —É—Å–ø–µ—à–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
                    if (response.status === 200) {
                        const responseClone = response.clone();
                        caches.open(CACHE_NAME)
                            .then(cache => cache.put(event.request, responseClone));
                    }
                    return response;
                })
                .catch(() => {
                    // –ï—Å–ª–∏ —Å–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑ –∫–µ—à–∞
                    return caches.match(event.request);
                })
        );
        return;
    }
    
    // –°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤: Cache First
    if (url.pathname.match(/\.(css|js|png|jpg|jpeg|gif|ico|svg|webp)$/)) {
        event.respondWith(
            caches.match(event.request)
                .then(response => {
                    if (response) {
                        return response;
                    }
                    return fetch(event.request)
                        .then(response => {
                            if (response.status === 200) {
                                const responseClone = response.clone();
                                caches.open(CACHE_NAME)
                                    .then(cache => cache.put(event.request, responseClone));
                            }
                            return response;
                        });
                })
        );
        return;
    }
    
    // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: Network First
    event.respondWith(
        fetch(event.request)
            .catch(() => caches.match(event.request))
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –≤ –±—É–¥—É—â–µ–º)
self.addEventListener('push', event => {
    console.log('üì± Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ');
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º
self.addEventListener('notificationclick', event => {
    console.log('üëÜ –ö–ª–∏–∫ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é');
    event.notification.close();
    event.waitUntil(
        clients.openWindow('/')
    );
});
EOF

echo "‚úÖ Service Worker –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è SEO"
echo "üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
echo "   - –ü—Ä–æ–ø—É—Å–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Ä–æ–±–æ—Ç–æ–≤"
echo "   - –ü—Ä–æ–ø—É—Å–∫ sitemap.xml –∏ robots.txt"
echo "   - Network First –¥–ª—è HTML —Å—Ç—Ä–∞–Ω–∏—Ü"
echo "   - Cache First –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤"
echo "   - –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp -i ~/.ssh/id_ed25519 sw.js root@193.160.208.183:/www/wwwroot/avtogost77.ru/

if [ $? -eq 0 ]; then
    echo "‚úÖ Service Worker –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
    echo "üîÑ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É SW –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Service Worker"
fi
