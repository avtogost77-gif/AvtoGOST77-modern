#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è CRM —Å–∏—Å—Ç–µ–º—ã –ê–≤—Ç–æ–ì–û–°–¢77 –Ω–∞ VPS

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π CRM —Å–∏—Å—Ç–µ–º—ã –ê–≤—Ç–æ–ì–û–°–¢77..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –∑–∞–ø—É—Å–∫–∞–µ–º—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ sudo
if [ "$EUID" -ne 0 ]; then
    log_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: sudo $0"
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∏ Docker Compose (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã)
install_docker() {
    if ! command -v docker &> /dev/null; then
        log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
        apt-get update
        apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        apt-get update
        apt-get install -y docker-ce docker-ce-cli containerd.io
        systemctl enable docker
        systemctl start docker
        log_info "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log_info "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi

    if ! command -v docker-compose &> /dev/null; then
        log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
        curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        log_info "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log_info "Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
start_application() {
    log_info "–ó–∞–ø—É—Å–∫–∞–µ–º CRM —Å–∏—Å—Ç–µ–º—É..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
    docker-compose -f docker-compose.prod.yml down --remove-orphans 2>/dev/null || true
    
    # –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose -f docker-compose.prod.yml up -d --build
    
    log_info "–ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 30
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if docker-compose -f docker-compose.prod.yml ps | grep -q "Up"; then
        log_info "‚úÖ CRM —Å–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!"
        log_info "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://$(curl -s ifconfig.me)"
        log_info "API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://$(curl -s ifconfig.me)/api"
        log_info "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://$(curl -s ifconfig.me)/docs"
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs"
        exit 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_info "=== –î–µ–ø–ª–æ–π CRM —Å–∏—Å—Ç–µ–º—ã –ê–≤—Ç–æ–ì–û–°–¢77 ==="
    
    install_docker
    start_application
    
    log_info "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    log_info "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: docker-compose -f docker-compose.prod.yml logs -f"
    log_info "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: docker-compose -f docker-compose.prod.yml down"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@"