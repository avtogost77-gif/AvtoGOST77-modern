"""
AVTOGOST77 CRM MVP - –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 31 –∞–≤–≥—É—Å—Ç–∞ 2025
–ê–≤—Ç–æ—Ä: AI Assistant
–û–ø–∏—Å–∞–Ω–∏–µ: –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ CRM —Å API —Ä–æ—É—Ç–µ—Ä–∞–º–∏
"""

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
from contextlib import asynccontextmanager
import os

from .database import engine, Base
from .api import (
    leads_router, partners_router, ratings_router, management_router,
    documents_router, contracts_router, legal_router
)

# ============================================
# –ñ–ò–ó–ù–ï–ù–ù–´–ô –¶–ò–ö–õ –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ============================================

@asynccontextmanager
async def lifespan(app: FastAPI):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    Base.metadata.create_all(bind=engine)
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    
    yield
    
    # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    print("üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")

# ============================================
# –°–û–ó–î–ê–ù–ò–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ============================================

app = FastAPI(
    title="AVTOGOST77 CRM MVP",
    description="CRM —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ AVTOGOST77",
    version="2.0.0",
    lifespan=lifespan
)

# ============================================
# –ù–ê–°–¢–†–û–ô–ö–ê CORS
# ============================================

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–æ–º–µ–Ω–∞–º–∏
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ============================================
# –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï API –†–û–£–¢–ï–†–û–í
# ============================================

# –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–æ—É—Ç–µ—Ä—ã MVP
app.include_router(leads_router, prefix="/api/v1")
app.include_router(partners_router, prefix="/api/v1")
app.include_router(ratings_router, prefix="/api/v1")
app.include_router(management_router, prefix="/api/v1")

# –ù–æ–≤—ã–µ —Ä–æ—É—Ç–µ—Ä—ã –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏
app.include_router(documents_router, prefix="/api/v1")
app.include_router(contracts_router, prefix="/api/v1")
app.include_router(legal_router, prefix="/api/v1")

# ============================================
# –°–¢–ê–¢–ò–ß–ï–°–ö–ò–ï –§–ê–ô–õ–´
# ============================================

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
frontend_path = os.path.join(os.path.dirname(__file__), "..", "..", "frontend")
if os.path.exists(frontend_path):
    app.mount("/", StaticFiles(directory=frontend_path, html=True), name="frontend")
    print(f"‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω: {frontend_path}")
else:
    print(f"‚ö†Ô∏è  –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω: {frontend_path}")

# ============================================
# –ö–û–†–ù–ï–í–´–ï –≠–ù–î–ü–û–ò–ù–¢–´
# ============================================

@app.get("/")
async def root():
    """–ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç"""
    return {
        "message": "AVTOGOST77 CRM MVP v2.0.0",
        "status": "running",
        "api_docs": "/docs",
        "redoc": "/redoc"
    }

@app.get("/health")
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return {
        "status": "healthy",
        "version": "2.0.0",
        "timestamp": "2025-08-31T00:00:00Z"
    }

@app.get("/api/info")
async def api_info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API"""
    return {
        "name": "AVTOGOST77 CRM MVP API",
        "version": "2.0.0",
        "description": "API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏, –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏, –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–∞–≤–æ–≤–æ–π –±–∞–∑–æ–π",
        "endpoints": {
            "leads": "/api/v1/leads",
            "partners": "/api/v1/partners",
            "ratings": "/api/v1/ratings",
            "management": "/api/v1/management",
            "documents": "/api/v1/documents",
            "contracts": "/api/v1/contracts",
            "legal": "/api/v1/legal"
        }
    }

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
