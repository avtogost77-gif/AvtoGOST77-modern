#!/bin/bash

# ============================================
# –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê CRM AVTOGOST77
# –î–ª—è Timeweb Cloud VPS
# ============================================

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É CRM –ê–≤—Ç–æ–ì–æ—Å—Ç77..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∑–∞–ø—É—â–µ–Ω–æ –æ—Ç root
if [[ $EUID -ne 0 ]]; then
   echo -e "${RED}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç root!${NC}" 
   exit 1
fi

# ============================================
# 1. –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´
# ============================================
echo -e "${YELLOW}üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É...${NC}"
apt update && apt upgrade -y

# ============================================
# 2. –£–°–¢–ê–ù–û–í–ö–ê DOCKER
# ============================================
echo -e "${YELLOW}üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Docker
if ! command -v docker &> /dev/null; then
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    rm get-docker.sh
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
    apt install docker-compose -y
    
    echo -e "${GREEN}‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
else
    echo -e "${GREEN}‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
fi

# ============================================
# 3. –£–°–¢–ê–ù–û–í–ö–ê –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –ü–ê–ö–ï–¢–û–í
# ============================================
echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã...${NC}"
apt install -y git nginx certbot python3-certbot-nginx ufw

# ============================================
# 4. –ù–ê–°–¢–†–û–ô–ö–ê FIREWALL
# ============================================
echo -e "${YELLOW}üîí –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall...${NC}"
ufw allow 22
ufw allow 80
ufw allow 443
ufw allow 8000
ufw allow 3000
ufw --force enable

# ============================================
# 5. –ö–õ–û–ù–ò–†–û–í–ê–ù–ò–ï –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø
# ============================================
echo -e "${YELLOW}üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º CRM...${NC}"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–æ–º–∞—à–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd /opt

# –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if [ -d "avtogost77-crm" ]; then
    echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º..."
    cd avtogost77-crm
    git pull
else
    git clone -b crm https://github.com/yourusername/yourrepo.git avtogost77-crm
    cd avtogost77-crm
fi

# ============================================
# 6. –°–û–ó–î–ê–ù–ò–ï –§–ê–ô–õ–ê –û–ö–†–£–ñ–ï–ù–ò–Ø
# ============================================
echo -e "${YELLOW}‚öôÔ∏è –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...${NC}"

cat > .env << EOF
# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
POSTGRES_DB=avtogost77_crm
POSTGRES_USER=avtogost77
POSTGRES_PASSWORD=$(openssl rand -base64 32)

# Backend
SECRET_KEY=$(openssl rand -base64 32)
DATABASE_URL=postgresql://avtogost77:${POSTGRES_PASSWORD}@postgres:5432/avtogost77_crm

# Frontend
REACT_APP_API_URL=http://localhost:8000

# –ê–¥–º–∏–Ω
ADMIN_EMAIL=admin@avtogost77.ru
ADMIN_PASSWORD=$(openssl rand -base64 16)
EOF

echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!${NC}"

# ============================================
# 7. –°–û–ó–î–ê–ù–ò–ï DOCKER-COMPOSE
# ============================================
echo -e "${YELLOW}üê≥ –°–æ–∑–¥–∞–µ–º docker-compose.yml...${NC}"

cat > docker-compose-production.yml << 'EOF'
version: '3.8'

services:
  # PostgreSQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  postgres:
    image: postgres:15
    container_name: avtogost77_postgres
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./avtogost77-crm-mvp/backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - crm_network

  # Backend API
  backend:
    build: ./avtogost77-crm-mvp/backend
    container_name: avtogost77_backend
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: always
    networks:
      - crm_network
    volumes:
      - ./avtogost77-crm-mvp/backend:/app

  # Frontend
  frontend:
    image: nginx:alpine
    container_name: avtogost77_frontend
    ports:
      - "3000:80"
    volumes:
      - ./avtogost77-crm-mvp/frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: always
    networks:
      - crm_network

volumes:
  postgres_data:

networks:
  crm_network:
    driver: bridge
EOF

# ============================================
# 8. –ù–ê–°–¢–†–û–ô–ö–ê NGINX
# ============================================
echo -e "${YELLOW}üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx...${NC}"

cat > /etc/nginx/sites-available/crm-avtogost77 << 'EOF'
server {
    listen 80;
    server_name crm.avtogost77.ru;

    # Frontend
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Backend API
    location /api {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
    location /docs {
        proxy_pass http://localhost:8000/docs;
        proxy_set_header Host $host;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–∞–π—Ç
ln -sf /etc/nginx/sites-available/crm-avtogost77 /etc/nginx/sites-enabled/
nginx -t && systemctl reload nginx

# ============================================
# 9. –ó–ê–ü–£–°–ö CRM
# ============================================
echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º CRM...${NC}"

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
docker-compose -f docker-compose-production.yml up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# ============================================
# 10. –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê
# ============================================
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
docker ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
if curl -s http://localhost:8000/health > /dev/null; then
    echo -e "${GREEN}‚úÖ Backend —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
else
    echo -e "${RED}‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
fi

if curl -s http://localhost:3000 > /dev/null; then
    echo -e "${GREEN}‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
else
    echo -e "${RED}‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
fi

# ============================================
# 11. –í–´–í–û–î –ò–ù–§–û–†–ú–ê–¶–ò–ò
# ============================================
echo ""
echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}üéâ CRM –£–°–ü–ï–®–ù–û –£–°–¢–ê–ù–û–í–õ–ï–ù–ê!${NC}"
echo -e "${GREEN}========================================${NC}"
echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:"
echo "----------------------------"
echo "Frontend: http://$(curl -s ifconfig.me):3000"
echo "Backend API: http://$(curl -s ifconfig.me):8000"
echo "API Docs: http://$(curl -s ifconfig.me):8000/docs"
echo ""
echo "üîê –î–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:"
echo "----------------------------"
echo "Email: admin@avtogost77.ru"
echo "–ü–∞—Ä–æ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª–µ: /opt/avtogost77-crm/.env"
echo ""
echo "üìÅ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ:"
echo "----------------------------"
echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: /opt/avtogost77-crm"
echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: /opt/avtogost77-crm/.env"
echo "–õ–æ–≥–∏: docker-compose -f docker-compose-production.yml logs"
echo ""
echo "üõ†Ô∏è –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "----------------------------"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: cd /opt/avtogost77-crm && docker-compose -f docker-compose-production.yml restart"
echo "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: cd /opt/avtogost77-crm && docker-compose -f docker-compose-production.yml down"
echo "–õ–æ–≥–∏: cd /opt/avtogost77-crm && docker-compose -f docker-compose-production.yml logs -f"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:${NC}"
echo "certbot --nginx -d crm.avtogost77.ru"
echo ""
echo -e "${GREEN}========================================${NC}"