// üé® –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –ò–ù–§–û–ì–†–ê–§–ò–ö–ê –ê–í–¢–û–ì–û–°–¢77
// –°–∏—Å—Ç–µ–º–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏

class InteractiveInfographic {
    constructor() {
        this.currentStep = 'start';
        this.selectedService = null;
        this.counters = {};
        this.initInfographic();
        this.startCounters();
    }

    initInfographic() {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏
        const container = document.getElementById('interactive-infographic');
        if (!container) return;

        container.innerHTML = this.getInfographicHTML();
        this.attachEventListeners();
        this.animateEntrance();
    }

    getInfographicHTML() {
        return `
            <div class="infographic-container">
                <div class="infographic-header">
                    <h2>üöõ –ö–∞–∫ –º—ã –¥–æ—Å—Ç–∞–≤–∏–º –≤–∞—à –≥—Ä—É–∑?</h2>
                    <p>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –∏ —É–∑–Ω–∞–π—Ç–µ –¥–µ—Ç–∞–ª–∏</p>
                </div>
                
                <div class="cargo-flowchart">
                    <div class="flow-start" id="flow-start">
                        <div class="cargo-box">
                            <div class="cargo-icon">üì¶</div>
                            <div class="cargo-title">–í–ê–® –ì–†–£–ó</div>
                            <div class="cargo-subtitle">–ö–∞–∫–æ–π –æ–±—ä–µ–º?</div>
                        </div>
                    </div>
                    
                    <div class="flow-arrows">
                        <div class="arrow arrow-1"></div>
                        <div class="arrow arrow-2"></div>
                        <div class="arrow arrow-3"></div>
                        <div class="arrow arrow-4"></div>
                    </div>
                    
                    <div class="service-options">
                        <div class="service-card gazelle" data-service="gazelle">
                            <div class="service-icon">üöê</div>
                            <div class="service-title">–ì–ê–ó–ï–õ–¨</div>
                            <div class="service-subtitle">–î–æ 1.5 —Ç–æ–Ω–Ω</div>
                            <div class="service-price">–æ—Ç 3,000‚ÇΩ</div>
                            <div class="service-badge">–ë—ã—Å—Ç—Ä–æ</div>
                        </div>
                        
                        <div class="service-card truck" data-service="truck">
                            <div class="service-icon">üöõ</div>
                            <div class="service-title">–û–¢–î–ï–õ–¨–ù–ê–Ø –ú–ê–®–ò–ù–ê</div>
                            <div class="service-subtitle">1.5-20 —Ç–æ–Ω–Ω</div>
                            <div class="service-price">–æ—Ç 25‚ÇΩ/–∫–º</div>
                            <div class="service-badge">–ù–∞–¥–µ–∂–Ω–æ</div>
                        </div>
                        
                        <div class="service-card consolidated" data-service="consolidated">
                            <div class="service-icon">üè≠</div>
                            <div class="service-title">–°–ë–û–†–ù–´–ô –ì–†–£–ó</div>
                            <div class="service-subtitle">–≠–∫–æ–Ω–æ–º–∏—è 70%</div>
                            <div class="service-price">–æ—Ç 15‚ÇΩ/–∫–≥</div>
                            <div class="service-badge">–í—ã–≥–æ–¥–Ω–æ</div>
                        </div>
                        
                        <div class="service-card calculator" data-service="calculator">
                            <div class="service-icon">‚ö°</div>
                            <div class="service-title">–ù–ï –ó–ù–ê–Æ</div>
                            <div class="service-subtitle">–†–∞—Å—á–µ—Ç –∑–∞ 30 —Å–µ–∫</div>
                            <div class="service-price">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</div>
                            <div class="service-badge">–¢–æ—á–Ω–æ</div>
                        </div>
                    </div>
                    
                    <div class="benefits-section" id="benefits-section" style="display: none;">
                        <div class="benefits-arrow"></div>
                        <div class="benefits-title">‚úÖ –í–ê–®–ò –í–´–ì–û–î–´</div>
                        <div class="benefits-grid">
                            <div class="benefit-item">
                                <div class="benefit-icon">‚è∞</div>
                                <div class="benefit-text">–ü–æ–¥–∞—á–∞ –∑–∞ 2 —á–∞—Å–∞</div>
                            </div>
                            <div class="benefit-item">
                                <div class="benefit-icon">üí∞</div>
                                <div class="benefit-text">–ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è —Ü–µ–Ω–∞</div>
                            </div>
                            <div class="benefit-item">
                                <div class="benefit-icon">üìû</div>
                                <div class="benefit-text">–ú–µ–Ω–µ–¥–∂–µ—Ä 24/7</div>
                            </div>
                            <div class="benefit-item">
                                <div class="benefit-icon">üõ°Ô∏è</div>
                                <div class="benefit-text">–ü–æ–ª–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="live-stats">
                    <div class="stat-item">
                        <div class="stat-number" id="today-orders">47</div>
                        <div class="stat-label">–∑–∞—è–≤–æ–∫ —Å–µ–≥–æ–¥–Ω—è</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number" id="total-clients">12,247</div>
                        <div class="stat-label">–¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number">99.2%</div>
                        <div class="stat-label">–¥–æ—Å—Ç–∞–≤–æ–∫ –≤ —Å—Ä–æ–∫</div>
                    </div>
                </div>
            </div>
        `;
    }

    attachEventListeners() {
        // –ö–ª–∏–∫–∏ –ø–æ —Ç–∏–ø–∞–º –¥–æ—Å—Ç–∞–≤–∫–∏
        document.querySelectorAll('.service-card').forEach(card => {
            card.addEventListener('click', (e) => {
                this.selectService(e.currentTarget.dataset.service);
            });
            
            // –≠—Ñ—Ñ–µ–∫—Ç –Ω–∞–≤–µ–¥–µ–Ω–∏—è
            card.addEventListener('mouseenter', (e) => {
                this.highlightService(e.currentTarget);
            });
            
            card.addEventListener('mouseleave', (e) => {
                this.unhighlightService(e.currentTarget);
            });
        });

        // –ö–ª–∏–∫–∏ –ø–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º
        document.querySelectorAll('.benefit-item').forEach(benefit => {
            benefit.addEventListener('click', (e) => {
                this.showBenefitDetails(e.currentTarget);
            });
        });
    }

    selectService(serviceType) {
        this.selectedService = serviceType;
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞
        document.querySelectorAll('.service-card').forEach(card => {
            card.classList.remove('selected', 'dimmed');
            if (card.dataset.service === serviceType) {
                card.classList.add('selected');
            } else {
                card.classList.add('dimmed');
            }
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        setTimeout(() => {
            const benefitsSection = document.getElementById('benefits-section');
            benefitsSection.style.display = 'block';
            setTimeout(() => benefitsSection.classList.add('visible'), 50);
        }, 300);

        // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
        if (typeof ym !== 'undefined') {
            ym(103413788, 'reachGoal', `infographic_${serviceType}_selected`);
        }

        // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–æ—Ä–æ–Ω–∫—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            this.redirectToFunnel(serviceType);
        }, 2000);
    }

    redirectToFunnel(serviceType) {
        const funnels = {
            'gazelle': '#calculator',
            'truck': '#calculator', 
            'consolidated': '#calculator',
            'calculator': '#calculator'
        };

        const targetElement = document.querySelector(funnels[serviceType]);
        if (targetElement) {
            targetElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
            
            // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
            setTimeout(() => {
                targetElement.classList.add('highlighted');
                setTimeout(() => targetElement.classList.remove('highlighted'), 2000);
            }, 500);
        }
    }

    highlightService(card) {
        if (!card.classList.contains('selected')) {
            card.style.transform = 'translateY(-5px) scale(1.02)';
            card.style.boxShadow = '0 8px 25px rgba(37, 99, 235, 0.3)';
        }
    }

    unhighlightService(card) {
        if (!card.classList.contains('selected')) {
            card.style.transform = '';
            card.style.boxShadow = '';
        }
    }

    showBenefitDetails(benefit) {
        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ
        benefit.classList.add('pulsing');
        setTimeout(() => benefit.classList.remove('pulsing'), 1000);
    }

    startCounters() {
        // –ê–Ω–∏–º–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫–∏
        this.animateCounter('today-orders', 47, 52, 5000);
        this.animateCounter('total-clients', 12247, 12253, 10000);
    }

    animateCounter(elementId, startValue, endValue, duration) {
        const element = document.getElementById(elementId);
        if (!element) return;

        const startTime = Date.now();
        const updateCounter = () => {
            const elapsed = Date.now() - startTime;
            const progress = Math.min(elapsed / duration, 1);
            
            const current = Math.floor(startValue + (endValue - startValue) * progress);
            element.textContent = current.toLocaleString();
            
            if (progress < 1) {
                requestAnimationFrame(updateCounter);
            } else {
                // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ü–∏–∫–ª
                setTimeout(() => {
                    this.animateCounter(elementId, endValue, startValue, duration);
                }, 2000);
            }
        };
        
        requestAnimationFrame(updateCounter);
    }

    animateEntrance() {
        // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const elements = [
            '.infographic-header',
            '.flow-start',
            '.service-card',
            '.live-stats'
        ];

        elements.forEach((selector, index) => {
            setTimeout(() => {
                document.querySelectorAll(selector).forEach(el => {
                    el.classList.add('animate-in');
                });
            }, index * 200);
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    window.interactiveInfographic = new InteractiveInfographic();
});
