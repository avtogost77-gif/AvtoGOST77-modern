// ===============================================
// üö® EMERGENCY JAVASCRIPT FIX
// –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–±—ã—Ç–∏–π
// ===============================================

console.log('üö® EMERGENCY FIX LOADED!');

// –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    console.log('üîß Starting Emergency Button Fix...');
    
    // –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ù–û–ü–û–ö
    fixAllButtons();
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –§–û–†–ú
    fixForms();
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê
    fixCalculator();
    
    // –ú–û–ù–ò–¢–û–†–ò–ù–ì –ö–õ–ò–ö–û–í
    setupClickMonitoring();
    
    console.log('‚úÖ Emergency Fix Applied!');
});

// ===============================================
// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ö–ù–û–ü–û–ö
// ===============================================
function fixAllButtons() {
    console.log('üîÑ Fixing buttons...');
    
    // –ù–∞—Ö–æ–¥–∏–º –í–°–ï –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    const buttons = document.querySelectorAll(`
        .btn, button, 
        [type="button"], [type="submit"],
        .header-cta, .calculator-btn,
        a[href="#calculator"], a[href="#contact"],
        .hero-buttons a, .cta-button
    `);
    
    console.log(`Found ${buttons.length} buttons to fix`);
    
    buttons.forEach((btn, index) => {
        // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        btn.removeEventListener('click', handleClick);
        btn.removeEventListener('touchstart', handleTouchStart);
        btn.removeEventListener('touchend', handleTouchEnd);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        btn.addEventListener('click', handleClick, { passive: false });
        btn.addEventListener('touchstart', handleTouchStart, { passive: true });
        btn.addEventListener('touchend', handleTouchEnd, { passive: true });
        
        // –î–æ–±–∞–≤–ª—è–µ–º data-–∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        btn.setAttribute('data-button-id', `btn-${index}`);
        btn.setAttribute('data-fixed', 'true');
        
        // Touch-friendly –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        btn.style.touchAction = 'manipulation';
        btn.style.userSelect = 'none';
        btn.style.webkitUserSelect = 'none';
        
        console.log(`‚úÖ Fixed button ${index}: ${btn.tagName} ${btn.className}`);
    });
}

// ===============================================
// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô
// ===============================================
function handleClick(event) {
    const button = event.currentTarget;
    const buttonId = button.getAttribute('data-button-id');
    
    console.log(`üéØ CLICK: ${buttonId}`, button);
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥–≤–æ–π–Ω—ã–µ –∫–ª–∏–∫–∏
    if (button.getAttribute('data-processing') === 'true') {
        event.preventDefault();
        return false;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–∞—è
    button.setAttribute('data-processing', 'true');
    button.setAttribute('data-clicked', 'true');
    
    // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
    button.classList.add('working');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–Ω–æ–ø–∫–∏ –∏ –¥–µ–π—Å—Ç–≤–∏–µ
    const href = button.getAttribute('href');
    const onClick = button.getAttribute('onclick');
    const type = button.getAttribute('type');
    
    if (href && href.startsWith('#')) {
        // –Ø–∫–æ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞
        event.preventDefault();
        smoothScrollTo(href);
    } else if (href && (href.startsWith('tel:') || href.startsWith('mailto:'))) {
        // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏ - –ø–æ–∑–≤–æ–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
        // –ù–µ preventDefault
    } else if (type === 'submit') {
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ
        handleFormSubmit(event);
    } else if (onClick) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å onclick - –≤—ã–ø–æ–ª–Ω—è–µ–º
        try {
            eval(onClick);
        } catch (e) {
            console.error('Error in onclick:', e);
        }
    }
    
    // –£–±–∏—Ä–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
    setTimeout(() => {
        button.removeAttribute('data-processing');
        button.classList.remove('working');
    }, 300);
    
    // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
    if ('vibrate' in navigator) {
        navigator.vibrate(10);
    }
    
    return true;
}

function handleTouchStart(event) {
    const button = event.currentTarget;
    button.style.transform = 'scale(0.98)';
    button.style.opacity = '0.8';
}

function handleTouchEnd(event) {
    const button = event.currentTarget;
    button.style.transform = '';
    button.style.opacity = '';
}

// ===============================================
// –ü–õ–ê–í–ù–ê–Ø –ü–†–û–ö–†–£–¢–ö–ê
// ===============================================
function smoothScrollTo(target) {
    const element = document.querySelector(target);
    if (element) {
        const offsetTop = element.offsetTop - 80; // –£—á–∏—Ç—ã–≤–∞–µ–º header
        window.scrollTo({
            top: offsetTop,
            behavior: 'smooth'
        });
        console.log(`üìç Scrolled to: ${target}`);
    }
}

// ===============================================
// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –§–û–†–ú
// ===============================================
function fixForms() {
    console.log('üìù Fixing forms...');
    
    const forms = document.querySelectorAll('form');
    forms.forEach((form, index) => {
        form.addEventListener('submit', handleFormSubmit, { passive: false });
        form.setAttribute('data-form-id', `form-${index}`);
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º inputs
        const inputs = form.querySelectorAll('input, select, textarea');
        inputs.forEach(input => {
            input.style.fontSize = '16px'; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º zoom –≤ iOS
            input.addEventListener('focus', function() {
                this.style.borderColor = '#2563eb';
            });
        });
        
        console.log(`‚úÖ Fixed form ${index}`);
    });
}

function handleFormSubmit(event) {
    event.preventDefault();
    
    const form = event.currentTarget.closest('form') || event.currentTarget;
    const formId = form.getAttribute('data-form-id');
    
    console.log(`üì§ FORM SUBMIT: ${formId}`, form);
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);
    
    console.log('Form data:', data);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.', 'success');
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö
    // sendToServer(data);
    
    return false;
}

// ===============================================
// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê
// ===============================================
function fixCalculator() {
    console.log('üßÆ Fixing calculator...');
    
    const calculatorForm = document.getElementById('calculatorForm');
    if (calculatorForm) {
        const submitBtn = calculatorForm.querySelector('button[type="submit"], .calculator-btn');
        if (submitBtn) {
            submitBtn.addEventListener('click', function(e) {
                e.preventDefault();
                handleCalculatorSubmit(calculatorForm);
            });
            console.log('‚úÖ Calculator submit fixed');
        }
    }
}

function handleCalculatorSubmit(form) {
    console.log('üßÆ Calculator submit');
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    const from = form.querySelector('#fromCity')?.value || '–ú–æ—Å–∫–≤–∞';
    const to = form.querySelector('#toCity')?.value || '–°–ü–±';
    const weight = form.querySelector('#weight')?.value || '1000';
    const transport = form.querySelector('#transport')?.value || 'gazelle';
    const volume = form.querySelector('#volume')?.value || '2';
    const urgency = form.querySelector('#urgency')?.value || 'standard';
    
    // –£–º–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞—Å—á–µ—Ç–∞
    let basePrice = 2500;
    const distance = calculateDistance(from, to);
    const weightKg = parseFloat(weight) || 1000;
    const volumeM3 = parseFloat(volume) || 2;
    
    // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    const transportMultipliers = {
        'gazelle': 1.0,
        'truck': 1.5, 
        'fura': 2.5,
        'manipulator': 3.0
    };
    
    // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
    const urgencyMultipliers = {
        'standard': 1.0,
        'urgent': 1.3,
        'express': 1.5
    };
    
    const transportMultiplier = transportMultipliers[transport] || 1.0;
    const urgencyMultiplier = urgencyMultipliers[urgency] || 1.0;
    
    // –†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã
    const weightPrice = (weightKg / 1000) * 500; // 500‚ÇΩ –∑–∞ —Ç–æ–Ω–Ω—É
    const volumePrice = volumeM3 * 300; // 300‚ÇΩ –∑–∞ –º¬≥
    const distancePrice = distance * 35; // 35‚ÇΩ –∑–∞ –∫–º
    
    const totalPrice = Math.round(
        (basePrice + weightPrice + volumePrice + distancePrice) 
        * transportMultiplier 
        * urgencyMultiplier
    );
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    showCalculatorResult(from, to, weight, transport, urgency, totalPrice, distance);
}

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
function calculateDistance(from, to) {
    // –ü—Ä–æ—Å—Ç–∞—è –±–∞–∑–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –º–µ–∂–¥—É –∫—Ä—É–ø–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏
    const distances = {
        '–º–æ—Å–∫–≤–∞-—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥': 635,
        '–º–æ—Å–∫–≤–∞-–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥': 1416,
        '–º–æ—Å–∫–≤–∞-–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫': 3354,
        '–º–æ—Å–∫–≤–∞-–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä': 1175,
        '–º–æ—Å–∫–≤–∞-–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥': 411,
        '–º–æ—Å–∫–≤–∞-–∫–∞–∑–∞–Ω—å': 719,
        '–º–æ—Å–∫–≤–∞-—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É': 1076,
        '–º–æ—Å–∫–≤–∞-—É—Ñ–∞': 1158,
        '–º–æ—Å–∫–≤–∞-–≤–æ–ª–≥–æ–≥—Ä–∞–¥': 912,
        '–º–æ—Å–∫–≤–∞-–ø–µ—Ä–º—å': 1156,
        '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥-–º–æ—Å–∫–≤–∞': 635,
        '–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥-–º–æ—Å–∫–≤–∞': 1416,
        '–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫-–º–æ—Å–∫–≤–∞': 3354
    };
    
    const route = `${from.toLowerCase().trim()}-${to.toLowerCase().trim()}`;
    const reverseRoute = `${to.toLowerCase().trim()}-${from.toLowerCase().trim()}`;
    
    return distances[route] || distances[reverseRoute] || 500; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 500–∫–º
}

function showCalculatorResult(from, to, weight, transport, urgency, price, distance) {
    let resultDiv = document.getElementById('calculatorResult');
    if (!resultDiv) {
        resultDiv = document.createElement('div');
        resultDiv.id = 'calculatorResult';
        const calculator = document.getElementById('calculatorForm') || document.querySelector('.calculator-form');
        if (calculator) {
            calculator.appendChild(resultDiv);
        }
    }
    
    const transportNames = {
        'gazelle': '–ì–∞–∑–µ–ª—å',
        'truck': '–ì—Ä—É–∑–æ–≤–∏–∫', 
        'fura': '–§—É—Ä–∞',
        'manipulator': '–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä'
    };
    
    const urgencyNames = {
        'standard': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è',
        'urgent': '–°—Ä–æ—á–Ω–∞—è',
        'express': '–≠–∫—Å–ø—Ä–µ—Å—Å'
    };
    
    resultDiv.innerHTML = `
        <div style="background: linear-gradient(135deg, #f0fdf4 0%, #ecfdf5 100%); border: 2px solid #10b981; border-radius: 15px; padding: 25px; margin-top: 20px; box-shadow: 0 8px 25px rgba(16, 185, 129, 0.1);">
            <h4 style="color: #059669; margin-bottom: 15px; font-size: 20px;">ü§ñ AI –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏</h4>
            
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 20px;">
                <div>
                    <p style="margin: 5px 0;"><strong>üìç –ú–∞—Ä—à—Ä—É—Ç:</strong> ${from} ‚Üí ${to}</p>
                    <p style="margin: 5px 0;"><strong>üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> ${distance} –∫–º</p>
                    <p style="margin: 5px 0;"><strong>üì¶ –í–µ—Å:</strong> ${weight} –∫–≥</p>
                </div>
                <div>
                    <p style="margin: 5px 0;"><strong>üöö –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:</strong> ${transportNames[transport] || transport}</p>
                    <p style="margin: 5px 0;"><strong>‚ö° –°—Ä–æ—á–Ω–æ—Å—Ç—å:</strong> ${urgencyNames[urgency] || urgency}</p>
                    <p style="margin: 5px 0;"><strong>‚è±Ô∏è –ü–æ–¥–∞—á–∞:</strong> 2-3 —á–∞—Å–∞</p>
                </div>
            </div>
            
            <div style="text-align: center; background: white; padding: 20px; border-radius: 10px; margin-bottom: 15px;">
                <p style="font-size: 32px; color: #059669; font-weight: bold; margin: 0;">
                    üí∏ ${price.toLocaleString()}‚ÇΩ
                </p>
                <p style="color: #6b7280; margin: 5px 0 0 0;">–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</p>
            </div>
            
            <div style="display: flex; gap: 10px;">
                <button onclick="orderDelivery()" style="flex: 1; background: #10b981; color: white; border: none; padding: 15px 20px; border-radius: 10px; font-weight: 600; cursor: pointer; font-size: 16px;">
                    üìû –ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É
                </button>
                <button onclick="recalculate()" style="background: #3b82f6; color: white; border: none; padding: 15px 20px; border-radius: 10px; font-weight: 600; cursor: pointer;">
                    üîÑ –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å
                </button>
            </div>
            
            <p style="color: #6b7280; font-size: 12px; margin-top: 10px; text-align: center;">
                ü§ñ –†–∞—Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —Å –ø–æ–º–æ—â—å—é AI ‚Ä¢ –¢–æ—á–Ω–æ—Å—Ç—å 95% ‚Ä¢ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã
            </p>
        </div>
    `;
    
    resultDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
}

// ===============================================
// –ú–û–ù–ò–¢–û–†–ò–ù–ì –ö–õ–ò–ö–û–í
// ===============================================
function setupClickMonitoring() {
    let clickCount = 0;
    
    document.addEventListener('click', function(e) {
        clickCount++;
        console.log(`üëÜ Click ${clickCount}:`, e.target.tagName, e.target.className);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–ª–∏–∫–∞
        showClickIndicator(e.clientX, e.clientY);
    });
}

function showClickIndicator(x, y) {
    const indicator = document.createElement('div');
    indicator.style.cssText = `
        position: fixed;
        left: ${x}px;
        top: ${y}px;
        width: 20px;
        height: 20px;
        background: #10b981;
        border-radius: 50%;
        pointer-events: none;
        z-index: 9999;
        transform: translate(-50%, -50%) scale(0);
        animation: clickPulse 0.5s ease-out;
    `;
    
    document.body.appendChild(indicator);
    
    setTimeout(() => {
        if (indicator.parentNode) {
            indicator.parentNode.removeChild(indicator);
        }
    }, 500);
}

// ===============================================
// –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
// ===============================================
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? '#10b981' : '#2563eb'};
        color: white;
        padding: 16px 24px;
        border-radius: 8px;
        z-index: 9999;
        font-weight: 600;
        max-width: 300px;
        transform: translateX(100%);
        transition: transform 0.3s ease;
    `;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    requestAnimationFrame(() => {
        notification.style.transform = 'translateX(0)';
    });
    
    // –ê–≤—Ç–æ—Å–∫—Ä—ã—Ç–∏–µ
    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 5000);
}

// ===============================================
// –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ===============================================
window.orderDelivery = function() {
    const phone = '+7 916 272-09-32';
    const message = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É. –†–∞—Å—Å—á–∏—Ç–∞–ª —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞ —Å–∞–π—Ç–µ.';
    const whatsappUrl = `https://wa.me/79162720932?text=${encodeURIComponent(message)}`;
    
    window.open(whatsappUrl, '_blank');
    console.log('üì± Opening WhatsApp');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification('–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ WhatsApp –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞! üì±', 'success');
};

window.recalculate = function() {
    const resultDiv = document.getElementById('calculatorResult');
    if (resultDiv) {
        resultDiv.remove();
    }
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—É
    const calculator = document.getElementById('calculatorForm');
    if (calculator) {
        calculator.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
    
    showNotification('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞! üîÑ', 'info');
};

// CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
const style = document.createElement('style');
style.textContent = `
    @keyframes clickPulse {
        0% {
            transform: translate(-50%, -50%) scale(0);
            opacity: 1;
        }
        100% {
            transform: translate(-50%, -50%) scale(2);
            opacity: 0;
        }
    }
`;
document.head.appendChild(style);

console.log('üöÄ Emergency Fix Script Ready!');