// üöÄ –û–¢–ü–†–ê–í–ö–ê –§–û–†–ú –í TELEGRAM - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
// –ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å

const TELEGRAM_CONFIG = {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    botToken: null, // –ë—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –∞—Ç—Ä–∏–±—É—Ç–∞ data-bot-token
    chatId: null,   // –ë—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –∞—Ç—Ä–∏–±—É—Ç–∞ data-chat-id
    
    // –®–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π
    templates: {
        leadForm: (data) => {
            return `üîî *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê!*

üë§ *–ò–º—è:* ${data.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
${data.email ? `üìß *Email:* ${data.email}` : ''}
${data.comment ? `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${data.comment}` : ''}

‚è∞ *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU')}
üåê *–ò—Å—Ç–æ—á–Ω–∏–∫:* ${data.source || '–§–æ—Ä–º–∞ –Ω–∞ —Å–∞–π—Ç–µ'}`;
        },
        
        exitIntent: (data) => {
            return `üéÅ *–ó–ê–Ø–í–ö–ê –° EXIT-POPUP!*

üë§ *–ò–º—è:* ${data.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
${data.email ? `üìß *Email:* ${data.email}` : ''}

üéØ *–ü—Ä–æ–º–æ–∫–æ–¥:* WELCOME10
‚è∞ *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU')}`;
        },
        
        calculator: (data) => {
            return `üßÆ *–†–ê–°–ß–ï–¢ –í –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ï!*

üìç *–ú–∞—Ä—à—Ä—É—Ç:* ${data.from} ‚Üí ${data.to}
üì¶ *–ì—Ä—É–∑:* ${data.weight}–∫–≥, ${data.volume}–º¬≥
üöõ *–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:* ${data.transport}
üí∞ *–†–∞—Å—á–µ—Ç–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:* ${data.price}‚ÇΩ

üë§ *–ö–æ–Ω—Ç–∞–∫—Ç:* ${data.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}

‚è∞ *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU')}`;
        }
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ chat ID –∏–∑ data-–∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∏–ª–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞
    const scriptTag = document.currentScript || document.querySelector('script[src*="telegram-sender"]');
    
    if (scriptTag) {
        TELEGRAM_CONFIG.botToken = scriptTag.getAttribute('data-bot-token') || '–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨';
        TELEGRAM_CONFIG.chatId = scriptTag.getAttribute('data-chat-id') || '399711407';
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if (TELEGRAM_CONFIG.botToken === '–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨' || 
        TELEGRAM_CONFIG.botToken === '–í–ê–®_–ù–û–í–´–ô_–¢–û–ö–ï–ù_–ó–î–ï–°–¨') {
        console.error('‚ö†Ô∏è Telegram –±–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω.');
        return;
    }
    
    console.log('‚úÖ Telegram sender –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
    sendPendingLeads();
});

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
async function sendToTelegram(data, templateType = 'leadForm') {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if (!TELEGRAM_CONFIG.botToken || TELEGRAM_CONFIG.botToken === '–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨') {
        console.error('‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
        saveToLocalStorage(data);
        showNotification('–ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.', 'warning');
        return { success: false, error: 'Bot token not configured' };
    }
    
    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        const template = TELEGRAM_CONFIG.templates[templateType] || TELEGRAM_CONFIG.templates.leadForm;
        const message = template(data);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_CONFIG.botToken}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: TELEGRAM_CONFIG.chatId,
                text: message,
                parse_mode: 'Markdown'
            })
        });
        
        const result = await response.json();
        
        if (result.ok) {
            console.log('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram');
            showNotification('–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.', 'success');
            return { success: true, messageId: result.result.message_id };
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ Telegram API:', result);
            saveToLocalStorage(data);
            showNotification('–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.', 'info');
            return { success: false, error: result.description };
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
        saveToLocalStorage(data);
        showNotification('–ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.', 'info');
        return { success: false, error: error.message };
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
function saveToLocalStorage(data) {
    const pendingLeads = JSON.parse(localStorage.getItem('pendingLeads') || '[]');
    pendingLeads.push({
        ...data,
        timestamp: new Date().toISOString(),
        sent: false
    });
    localStorage.setItem('pendingLeads', JSON.stringify(pendingLeads));
    console.log('üíæ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ');
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
async function sendPendingLeads() {
    const pendingLeads = JSON.parse(localStorage.getItem('pendingLeads') || '[]');
    
    if (pendingLeads.length === 0) return;
    
    console.log(`üì§ –ù–∞–π–¥–µ–Ω–æ ${pendingLeads.length} –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫`);
    
    for (let i = 0; i < pendingLeads.length; i++) {
        const lead = pendingLeads[i];
        if (!lead.sent) {
            const result = await sendToTelegram(lead);
            if (result.success) {
                pendingLeads[i].sent = true;
                pendingLeads[i].messageId = result.messageId;
            }
        }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ (—Ç–æ–ª—å–∫–æ –Ω–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ)
    const unsent = pendingLeads.filter(lead => !lead.sent);
    localStorage.setItem('pendingLeads', JSON.stringify(unsent));
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info') {
    // –ï—Å–ª–∏ –µ—Å—Ç—å –≥–æ—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
    if (window.NotificationManager && typeof window.NotificationManager.show === 'function') {
        window.NotificationManager.show(message, type);
        return;
    }
    
    // –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 15px 25px;
        background: ${type === 'success' ? '#4CAF50' : type === 'warning' ? '#ff9800' : '#2196F3'};
        color: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.2);
        z-index: 10001;
        animation: slideIn 0.3s ease;
    `;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease';
        setTimeout(() => notification.remove(), 300);
    }, 5000);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º
window.submitExitIntentForm = async function(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const data = Object.fromEntries(formData);
    data.source = 'Exit-Intent Pop-up';
    
    await sendToTelegram(data, 'exitIntent');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º popup
    if (typeof closeExitPopup === 'function') {
        setTimeout(closeExitPopup, 2000);
    }
};

window.submitLeadForm = async function(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const data = Object.fromEntries(formData);
    
    await sendToTelegram(data, 'leadForm');
};

window.submitCalculatorData = async function(calculatorData) {
    await sendToTelegram(calculatorData, 'calculator');
};

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
window.sendToTelegram = sendToTelegram;
window.TelegramSender = {
    send: sendToTelegram,
    config: TELEGRAM_CONFIG,
    showNotification: showNotification
};

// CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
const style = document.createElement('style');
style.textContent = `
@keyframes slideIn {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
}
@keyframes slideOut {
    from { transform: translateX(0); opacity: 1; }
    to { transform: translateX(100%); opacity: 0; }
}
`;
document.head.appendChild(style);

console.log('üì± Telegram Sender v2.0 –∑–∞–≥—Ä—É–∂–µ–Ω');