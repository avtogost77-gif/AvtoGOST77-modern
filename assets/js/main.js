document.addEventListener('DOMContentLoaded', () => {
  const toggle = document.querySelector('.mobile-toggle');
  const menu = document.querySelector('.navbar-menu');

  if (toggle && menu) {
    toggle.addEventListener('click', () => {
      menu.classList.toggle('open');
    });
  }

  // –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º —Å —Å–æ–≥–ª–∞—Å–∏–µ–º 152-–§–ó
  initConsentValidation();

  // PWA Installation
  initPWAInstall();
});

// ===============================================
// PWA –£–°–¢–ê–ù–û–í–ö–ê
// ===============================================

let deferredPrompt;

function initPWAInstall() {
  const installBtn = document.getElementById('pwa-install-btn');
  
  if (!installBtn) return;

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ PWA –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
  window.addEventListener('beforeinstallprompt', (e) => {
    e.preventDefault();
    deferredPrompt = e;
    installBtn.style.display = 'inline-block';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
    installBtn.style.opacity = '0';
    setTimeout(() => {
      installBtn.style.transition = 'opacity 0.3s ease';
      installBtn.style.opacity = '1';
    }, 100);
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏
  installBtn.addEventListener('click', async () => {
    if (!deferredPrompt) return;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    deferredPrompt.prompt();
    
    // –ñ–¥–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { outcome } = await deferredPrompt.userChoice;
    
    if (outcome === 'accepted') {
      console.log('‚úÖ PWA —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
      showInstallSuccess();
    } else {
      console.log('‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PWA –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞');
    }
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–æ–º–ø—Ç
    deferredPrompt = null;
    installBtn.style.display = 'none';
  });

  // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
  window.addEventListener('appinstalled', () => {
    console.log('‚úÖ PWA —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    installBtn.style.display = 'none';
    showInstallSuccess();
  });
}

function showInstallSuccess() {
  // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
  const notification = document.createElement('div');
  notification.innerHTML = `
    <div style="
      position: fixed;
      top: 20px;
      right: 20px;
      background: #10b981;
      color: white;
      padding: 16px 24px;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      z-index: 9999;
      font-weight: 500;
      animation: slideIn 0.3s ease;
    ">
      üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ê–≤—Ç–æ–ì–û–°–¢ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!
    </div>
  `;
  
  document.body.appendChild(notification);
  
  // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    notification.style.animation = 'slideOut 0.3s ease forwards';
    setTimeout(() => notification.remove(), 300);
  }, 3000);
}

// ===============================================
// –í–ê–õ–ò–î–ê–¶–ò–Ø –°–û–ì–õ–ê–°–ò–Ø 152-–§–ó
// ===============================================

function initConsentValidation() {
  const consentCheckboxes = document.querySelectorAll('input[name="consent"]');
  
  consentCheckboxes.forEach(checkbox => {
    const label = checkbox.closest('.consent-checkbox');
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    checkbox.addEventListener('change', () => {
      validateConsent(checkbox, label);
    });
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
    checkbox.addEventListener('focus', () => {
      label?.classList.remove('invalid');
    });
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
    checkbox.addEventListener('blur', () => {
      validateConsent(checkbox, label);
    });
  });
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö —Ñ–æ—Ä–º –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
  const forms = document.querySelectorAll('form');
  forms.forEach(form => {
    form.addEventListener('submit', (e) => {
      const consent = form.querySelector('input[name="consent"]');
      const label = consent?.closest('.consent-checkbox');
      
      if (consent && !consent.checked) {
        e.preventDefault();
        
        // –í–∏–∑—É–∞–ª—å–Ω–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è –æ—à–∏–±–∫–∏
        if (label) {
          label.classList.add('invalid');
          label.classList.remove('valid');
        }
        
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —á–µ–∫–±–æ–∫—Å—É
        consent.scrollIntoView({ behavior: 'smooth', block: 'center' });
        consent.focus();
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showConsentError();
        
        return false;
      }
      
      if (label) {
        label.classList.add('valid');
        label.classList.remove('invalid');
      }
    });
  });
}

function validateConsent(checkbox, label) {
  if (!label) return;
  
  if (checkbox.checked) {
    label.classList.add('valid');
    label.classList.remove('invalid');
  } else {
    label.classList.remove('valid');
    // –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º invalid —Å—Ä–∞–∑—É, —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã
  }
}

function showConsentError() {
  const notification = document.createElement('div');
  notification.innerHTML = `
    <div style="
      position: fixed;
      top: 20px;
      right: 20px;
      background: #ef4444;
      color: white;
      padding: 16px 24px;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      z-index: 9999;
      font-weight: 500;
      animation: slideIn 0.3s ease;
    ">
      ‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö
    </div>
  `;
  
  document.body.appendChild(notification);
  
  // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    notification.style.animation = 'slideOut 0.3s ease forwards';
    setTimeout(() => notification.remove(), 300);
  }, 4000);
}