version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: avtogost77_crm_postgres
    environment:
      POSTGRES_DB: avtogost77_crm
      POSTGRES_USER: avtogost77
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - crm_network

  # Backend API (Python FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: avtogost77_crm_backend
    environment:
      - DATABASE_URL=postgresql://avtogost77:${POSTGRES_PASSWORD}@postgres:5432/avtogost77_crm
      - SECRET_KEY=${SECRET_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
    volumes:
      - ./backend/app/uploads:/app/uploads
      - ./backend/app/logs:/app/logs
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - crm_network

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: avtogost77_crm_frontend
    restart: unless-stopped
    networks:
      - crm_network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: avtogost77_crm_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
      - ./frontend/build:/var/www/html
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - crm_network

volumes:
  postgres_data:
    driver: local

networks:
  crm_network:
    driver: bridge
