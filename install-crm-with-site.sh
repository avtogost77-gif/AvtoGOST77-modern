#!/bin/bash

# ============================================
# –£–°–¢–ê–ù–û–í–ö–ê CRM –†–Ø–î–û–ú –° –°–£–©–ï–°–¢–í–£–Æ–©–ò–ú –°–ê–ô–¢–û–ú
# –î–ª—è Timeweb Cloud VPS —Å —Å–∞–π—Ç–æ–º
# ============================================

echo "üöÄ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CRM –ê–≤—Ç–æ–ì–æ—Å—Ç77 (–Ω–µ –∑–∞—Ç—Ä–æ–Ω–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–∞–π—Ç)..."

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# ============================================
# 1. –ü–†–û–í–ï–†–ö–ò
# ============================================
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ
DISK_USAGE=$(df / | grep / | awk '{ print $5 }' | sed 's/%//g')
if [ $DISK_USAGE -gt 90 ]; then
    echo -e "${RED}‚ö†Ô∏è –ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ! –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ${DISK_USAGE}%${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å
FREE_MEM=$(free -m | awk 'NR==2{printf "%.0f", $7}')
if [ $FREE_MEM -lt 500 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –°–≤–æ–±–æ–¥–Ω–æ–π –ø–∞–º—è—Ç–∏: ${FREE_MEM}MB${NC}"
fi

echo -e "${GREEN}‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞! –ú–µ—Å—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.${NC}"

# ============================================
# 2. –£–°–¢–ê–ù–û–í–ö–ê DOCKER (–µ—Å–ª–∏ –Ω–µ—Ç)
# ============================================
if ! command -v docker &> /dev/null; then
    echo -e "${YELLOW}üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker...${NC}"
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    rm get-docker.sh
    
    # Docker Compose
    apt update
    apt install -y docker-compose
else
    echo -e "${GREEN}‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi

# ============================================
# 3. –°–û–ó–î–ê–ï–ú –î–ò–†–ï–ö–¢–û–†–ò–Æ –î–õ–Ø CRM
# ============================================
echo -e "${YELLOW}üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è CRM...${NC}"

# –ò—Å–ø–æ–ª—å–∑—É–µ–º /opt —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞—Ç—å —Å–∞–π—Ç—É
mkdir -p /opt/crm-avtogost77
cd /opt/crm-avtogost77

# ============================================
# 4. –ó–ê–ì–†–£–ñ–ê–ï–ú CRM
# ============================================
echo -e "${YELLOW}üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã CRM...${NC}"

# –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
mkdir -p backend frontend postgres_data

# ============================================
# 5. –°–û–ó–î–ê–ï–ú DOCKER-COMPOSE
# ============================================
echo -e "${YELLOW}üê≥ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"

cat > docker-compose.yml << 'EOF'
version: '3.8'

services:
  # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)
  crm_postgres:
    image: postgres:15-alpine
    container_name: crm_postgres
    environment:
      POSTGRES_DB: crm_avtogost77
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"  # –ù–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å –¥—Ä—É–≥–∏–º–∏ –ë–î
    restart: unless-stopped
    networks:
      - crm_network

  # Backend API
  crm_backend:
    image: python:3.11-slim
    container_name: crm_backend
    working_dir: /app
    environment:
      DATABASE_URL: postgresql://crm_user:${DB_PASSWORD}@crm_postgres:5432/crm_avtogost77
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - ./backend:/app
    ports:
      - "127.0.0.1:8000:8000"  # –¢–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ
    command: |
      bash -c "
      pip install fastapi uvicorn sqlalchemy psycopg2-binary pydantic python-multipart &&
      uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "
    depends_on:
      - crm_postgres
    restart: unless-stopped
    networks:
      - crm_network

  # Frontend (–ø—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä)
  crm_frontend:
    image: nginx:alpine
    container_name: crm_frontend
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    ports:
      - "127.0.0.1:3001:80"  # –ù–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å –æ—Å–Ω–æ–≤–Ω—ã–º —Å–∞–π—Ç–æ–º
    restart: unless-stopped
    networks:
      - crm_network

networks:
  crm_network:
    driver: bridge
    name: crm_avtogost77_net
EOF

# ============================================
# 6. –°–û–ó–î–ê–ï–ú –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø
# ============================================
echo -e "${YELLOW}üîê –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏...${NC}"

DB_PASS=$(openssl rand -base64 24 | tr -d "=+/" | cut -c1-20)
SECRET=$(openssl rand -base64 32)

cat > .env << EOF
# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DB_PASSWORD=${DB_PASS}

# Backend
SECRET_KEY=${SECRET}

# Admin
ADMIN_USER=admin
ADMIN_PASSWORD=$(openssl rand -base64 12 | tr -d "=+/" | cut -c1-12)
EOF

echo -e "${GREEN}‚úÖ –ü–∞—Ä–æ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ .env${NC}"

# ============================================
# 7. –ë–ê–ó–û–í–ê–Ø –°–¢–†–£–ö–¢–£–†–ê CRM
# ============================================
echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ñ–∞–π–ª—ã CRM...${NC}"

# Backend main.py
cat > backend/main.py << 'EOF'
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
import os

app = FastAPI(title="–ê–≤—Ç–æ–ì–æ—Å—Ç77 CRM API", version="1.0.0")

# CORS –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.get("/")
async def root():
    return {"message": "–ê–≤—Ç–æ–ì–æ—Å—Ç77 CRM API —Ä–∞–±–æ—Ç–∞–µ—Ç!"}

@app.get("/health")
async def health():
    return {"status": "healthy", "service": "crm-backend"}

@app.get("/api/info")
async def info():
    return {
        "name": "–ê–≤—Ç–æ–ì–æ—Å—Ç77 CRM",
        "version": "1.0.0",
        "status": "operational"
    }
EOF

# Frontend index.html
cat > frontend/index.html << 'EOF'
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ê–≤—Ç–æ–ì–æ—Å—Ç77 CRM</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .container {
            background: rgba(255, 255, 255, 0.95);
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            text-align: center;
            max-width: 600px;
        }
        h1 {
            color: #2c3e50;
            margin-bottom: 20px;
            font-size: 2.5em;
        }
        .status {
            background: #4CAF50;
            color: white;
            padding: 10px 20px;
            border-radius: 25px;
            display: inline-block;
            margin: 20px 0;
        }
        .info {
            margin: 30px 0;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
        }
        .info p {
            margin: 10px 0;
            color: #555;
        }
        .btn {
            background: #667eea;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 25px;
            font-size: 1.1em;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            margin: 10px;
            transition: transform 0.3s;
        }
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üöõ –ê–≤—Ç–æ–ì–æ—Å—Ç77 CRM</h1>
        <div class="status">‚úÖ –°–∏—Å—Ç–µ–º–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</div>
        
        <div class="info">
            <h2>üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</h2>
            <p><strong>–í–µ—Ä—Å–∏—è:</strong> 1.0.0</p>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> –†–∞–±–æ—Ç–∞–µ—Ç</p>
            <p><strong>API:</strong> <span id="api-status">–ü—Ä–æ–≤–µ—Ä—è–µ–º...</span></p>
        </div>
        
        <div>
            <a href="/api/docs" class="btn">üìö API –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</a>
            <a href="http://avtogost77.ru" class="btn">üåê –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç</a>
        </div>
        
        <p style="margin-top: 30px; color: #888;">
            ¬© 2025 –ê–≤—Ç–æ–ì–æ—Å—Ç77. CRM —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∞–º–∏.
        </p>
    </div>
    
    <script>
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
        fetch('http://' + window.location.hostname + ':8000/health')
            .then(response => response.json())
            .then(data => {
                document.getElementById('api-status').innerHTML = 
                    '<span style="color: green;">‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω</span>';
            })
            .catch(error => {
                document.getElementById('api-status').innerHTML = 
                    '<span style="color: red;">‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω</span>';
            });
    </script>
</body>
</html>
EOF

# ============================================
# 8. –ó–ê–ü–£–°–ö–ê–ï–ú CRM
# ============================================
echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º CRM –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"

docker-compose up -d

echo "–ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# ============================================
# 9. –ù–ê–°–¢–†–û–ô–ö–ê NGINX (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω –ø–æ–¥–¥–æ–º–µ–Ω)
# ============================================
echo -e "${YELLOW}üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ Nginx
if command -v nginx &> /dev/null; then
    cat > /etc/nginx/sites-available/crm-avtogost77 << 'EOF'
# CRM –ê–≤—Ç–æ–ì–æ—Å—Ç77 - —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä—è–¥–æ–º —Å –æ—Å–Ω–æ–≤–Ω—ã–º —Å–∞–π—Ç–æ–º
server {
    listen 80;
    server_name crm.avtogost77.ru;
    
    # Frontend
    location / {
        proxy_pass http://127.0.0.1:3001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    # Backend API
    location /api {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    # API Docs
    location /docs {
        proxy_pass http://127.0.0.1:8000/docs;
        proxy_set_header Host $host;
    }
}
EOF
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    # ln -sf /etc/nginx/sites-available/crm-avtogost77 /etc/nginx/sites-enabled/
    # nginx -t && systemctl reload nginx
    
    echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx —Å–æ–∑–¥–∞–Ω–∞ (–Ω–æ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞)${NC}"
fi

# ============================================
# 10. –ü–†–û–í–ï–†–ö–ê –ò –í–´–í–û–î –†–ï–ó–£–õ–¨–¢–ê–¢–û–í
# ============================================
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
docker ps | grep crm_

# –ü–æ–ª—É—á–∞–µ–º IP
SERVER_IP=$(curl -s ifconfig.me 2>/dev/null || hostname -I | awk '{print $1}')

# ============================================
# –§–ò–ù–ê–õ–¨–ù–´–ô –í–´–í–û–î
# ============================================
echo ""
echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${GREEN}‚ïë         üéâ CRM –£–°–ü–ï–®–ù–û –£–°–¢–ê–ù–û–í–õ–ï–ù–ê!                  ‚ïë${NC}"
echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""
echo "üìã –î–û–°–¢–£–ü –ö –°–ò–°–¢–ï–ú–ï:"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo "  CRM Interface:  http://${SERVER_IP}:3001"
echo "  API Backend:    http://${SERVER_IP}:8000"
echo "  API Docs:       http://${SERVER_IP}:8000/docs"
echo ""
echo "üîê –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo "  –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ: /opt/crm-avtogost77/.env"
echo ""
source .env
echo "  Admin User:     ${ADMIN_USER}"
echo "  Admin Password: ${ADMIN_PASSWORD}"
echo ""
echo "üìÅ –†–ê–°–ü–û–õ–û–ñ–ï–ù–ò–ï:"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo "  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:     /opt/crm-avtogost77"
echo "  –î–∞–Ω–Ω—ã–µ –ë–î:      /opt/crm-avtogost77/postgres_data"
echo "  –õ–æ–≥–∏:           docker-compose logs -f"
echo ""
echo "üõ†Ô∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï:"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:     cd /opt/crm-avtogost77 && docker-compose down"
echo "  –ó–∞–ø—É—Å—Ç–∏—Ç—å:      cd /opt/crm-avtogost77 && docker-compose up -d"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å:  cd /opt/crm-avtogost77 && docker-compose restart"
echo "  –õ–æ–≥–∏:           cd /opt/crm-avtogost77 && docker-compose logs -f"
echo ""
echo "üåê –ù–ê–°–¢–†–û–ô–ö–ê –î–û–ú–ï–ù–ê (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo "  1. –î–æ–±–∞–≤—å—Ç–µ A-–∑–∞–ø–∏—Å—å: crm.avtogost77.ru -> ${SERVER_IP}"
echo "  2. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ Nginx: ln -sf /etc/nginx/sites-available/crm-avtogost77 /etc/nginx/sites-enabled/"
echo "  3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Nginx: systemctl reload nginx"
echo "  4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SSL: certbot --nginx -d crm.avtogost77.ru"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  –í–ê–ñ–ù–û: CRM —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ä—Ç–∞—Ö –∏ –Ω–µ –º–µ—à–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–∞–π—Ç—É!${NC}"
echo ""
echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"