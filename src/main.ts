/**
 * –ê–≤—Ç–æ–ì–û–°–¢ Future 2030 - –ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å
 * –¢–∞–∫—Ç–∏–ª—å–Ω–æ–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –∏ –∏–¥–µ–∞–ª—å–Ω–∞—è –≤–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂
 */

import { initializeApp } from './lib/app';
import { Calculator } from './lib/calculator';
import { Analytics } from './lib/analytics';
import { UIComponents } from './lib/ui-components';
import { AIAssistant } from './lib/ai-assistant';
import { SalesPlaybook } from './lib/sales-playbook';
import { SEOOptimizer } from './lib/seo-optimizer';
import { PerformanceMonitor } from './lib/performance-monitor';

// –ò–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π
import './styles/main.scss';

// –¢–∏–ø—ã –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
interface AppConfig {
  apiUrl: string;
  openaiApiKey?: string;
  analyticsKey?: string;
  version: string;
  buildTime: string;
  isDevelopment: boolean;
}

class AvtoGostApp {
  private calculator: Calculator;
  private analytics: Analytics;
  private ui: UIComponents;
  private ai: AIAssistant;
  private salesPlaybook: SalesPlaybook;
  private seo: SEOOptimizer;
  private performance: PerformanceMonitor;
  
  constructor(private config: AppConfig) {
    console.log(`üöÄ –ê–≤—Ç–æ–ì–û–°–¢ Future 2030 v${config.version}`);
    console.log(`üìÖ –°–æ–±—Ä–∞–Ω–æ: ${config.buildTime}`);
    
    this.initializeModules();
    this.setupEventListeners();
    this.loadDynamicContent();
  }
  
  private initializeModules(): void {
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
      this.performance = new PerformanceMonitor();
      this.analytics = new Analytics(this.config.analyticsKey);
      this.ui = new UIComponents();
      this.calculator = new Calculator();
      this.ai = new AIAssistant(this.config.openaiApiKey);
      this.salesPlaybook = new SalesPlaybook(this.analytics);
      this.seo = new SEOOptimizer();
      
      console.log('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    }
  }
  
  private setupEventListeners(): void {
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    document.addEventListener('DOMContentLoaded', () => {
      this.onDOMReady();
    });
    
    window.addEventListener('load', () => {
      this.onWindowLoad();
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    window.addEventListener('error', (event) => {
      this.analytics.trackError('javascript_error', {
        message: event.message,
        filename: event.filename,
        lineno: event.lineno
      });
    });
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    window.addEventListener('beforeunload', () => {
      this.performance.sendMetrics();
    });
  }
  
  private onDOMReady(): void {
    console.log('üìÑ DOM –≥–æ—Ç–æ–≤');
    
    // –ó–∞–ø—É—Å–∫ –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂
    this.salesPlaybook.initializeFunnel();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    this.ui.initializeComponents();
    
    // SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
    this.seo.optimizePage();
    
    // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    this.analytics.trackEvent('page_ready', {
      timestamp: Date.now(),
      userAgent: navigator.userAgent
    });
  }
  
  private onWindowLoad(): void {
    console.log('üéâ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    
    // –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    this.performance.measureCoreWebVitals();
    
    // –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    this.loadNonCriticalContent();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±—Ä–∞—É–∑–µ—Ä–∞
    this.detectBrowserCapabilities();
  }
  
  private async loadDynamicContent(): Promise<void> {
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
      const calculatorHTML = await this.renderCalculator();
      const mainContent = document.getElementById('main-content');
      
      if (mainContent) {
        mainContent.innerHTML = calculatorHTML;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –≤—Å—Ç–∞–≤–∫–∏
        this.calculator.initialize();
        this.ai.initialize();
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error);
      this.showFallbackContent();
    }
  }
  
  private async renderCalculator(): Promise<string> {
    return `
      <!-- –≠–¢–ê–ü 3: CONSIDERATION - –£–º–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä -->
      <section id="smart-calculator" class="calculator-section">
        <div class="container">
          <div class="calculator-header">
            <h2 class="section-title">üí∞ –£–º–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏</h2>
            <p class="section-subtitle">
              –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞ 30 —Å–µ–∫—É–Ω–¥. –ù–∏–∫–∞–∫–∏—Ö –∑–≤–æ–Ω–∫–æ–≤ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π.
            </p>
          </div>
          
          <div class="calculator-card glass-morphism">
            <form id="future-calculator" class="calculator-form">
              <!-- –®–∞–≥ 1: –ú–∞—Ä—à—Ä—É—Ç -->
              <div class="calc-step" data-step="1">
                <h3 class="step-title">üìç –û—Ç–∫—É–¥–∞ –∏ –∫—É–¥–∞ –≤–µ–∑–µ–º?</h3>
                <div class="input-group">
                  <div class="input-field">
                    <input 
                      type="text" 
                      id="from-city" 
                      name="fromCity"
                      placeholder="–û—Ç–∫—É–¥–∞ (–≥–æ—Ä–æ–¥)"
                      class="tactile-input"
                      required
                      autocomplete="address-level2"
                    >
                    <div class="input-suggestions" id="from-suggestions"></div>
                  </div>
                  <div class="input-field">
                    <input 
                      type="text" 
                      id="to-city" 
                      name="toCity"
                      placeholder="–ö—É–¥–∞ (–≥–æ—Ä–æ–¥)"
                      class="tactile-input"
                      required
                      autocomplete="address-level2"
                    >
                    <div class="input-suggestions" id="to-suggestions"></div>
                  </div>
                </div>
              </div>
              
              <!-- –®–∞–≥ 2: –¢–∏–ø –≥—Ä—É–∑–∞ -->
              <div class="calc-step" data-step="2">
                <h3 class="step-title">üì¶ –ß—Ç–æ –ø–µ—Ä–µ–≤–æ–∑–∏–º?</h3>
                <div class="cargo-options">
                  <label class="cargo-option tactile-card">
                    <input type="radio" name="cargoType" value="general" class="sr-only">
                    <div class="cargo-icon">üì¶</div>
                    <div class="cargo-label">–û–±—ã—á–Ω—ã–π –≥—Ä—É–∑</div>
                  </label>
                  <label class="cargo-option tactile-card">
                    <input type="radio" name="cargoType" value="furniture" class="sr-only">
                    <div class="cargo-icon">üõãÔ∏è</div>
                    <div class="cargo-label">–ú–µ–±–µ–ª—å</div>
                  </label>
                  <label class="cargo-option tactile-card">
                    <input type="radio" name="cargoType" value="appliances" class="sr-only">
                    <div class="cargo-icon">üîå</div>
                    <div class="cargo-label">–¢–µ—Ö–Ω–∏–∫–∞</div>
                  </label>
                  <label class="cargo-option tactile-card">
                    <input type="radio" name="cargoType" value="documents" class="sr-only">
                    <div class="cargo-icon">üìÑ</div>
                    <div class="cargo-label">–î–æ–∫—É–º–µ–Ω—Ç—ã</div>
                  </label>
                </div>
              </div>
              
              <!-- –®–∞–≥ 3: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã -->
              <div class="calc-step" data-step="3">
                <h3 class="step-title">‚öñÔ∏è –í–µ—Å –∏ –æ–±—ä–µ–º</h3>
                <div class="parameters-grid">
                  <div class="parameter-group">
                    <label class="parameter-label">–í–µ—Å (–∫–≥)</label>
                    <div class="slider-group">
                      <input 
                        type="range" 
                        id="weight-slider" 
                        name="weight"
                        min="1" 
                        max="1000" 
                        value="50"
                        class="tactile-slider"
                      >
                      <input 
                        type="number" 
                        id="weight-input" 
                        name="weightInput"
                        value="50" 
                        min="1" 
                        max="1000"
                        class="tactile-input parameter-input"
                      >
                    </div>
                  </div>
                  <div class="parameter-group">
                    <label class="parameter-label">–û–±—ä–µ–º (–º¬≥)</label>
                    <div class="slider-group">
                      <input 
                        type="range" 
                        id="volume-slider" 
                        name="volume"
                        min="0.1" 
                        max="20" 
                        step="0.1" 
                        value="1"
                        class="tactile-slider"
                      >
                      <input 
                        type="number" 
                        id="volume-input" 
                        name="volumeInput"
                        value="1" 
                        min="0.1" 
                        max="20" 
                        step="0.1"
                        class="tactile-input parameter-input"
                      >
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- AI –ø–æ–º–æ—â–Ω–∏–∫ -->
              <div class="ai-assistant-card">
                <div class="ai-icon">ü§ñ</div>
                <div class="ai-content">
                  <div class="ai-title">AI-–ø–æ–º–æ—â–Ω–∏–∫</div>
                  <div class="ai-description">–û–ø–∏—à–∏—Ç–µ –≥—Ä—É–∑ –≥–æ–ª–æ—Å–æ–º –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–º</div>
                  <button type="button" id="voice-input" class="tactile-button ai-button">
                    üé§ –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥
                  </button>
                </div>
              </div>
              
              <!-- –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ -->
              <button 
                type="submit" 
                id="calculate-btn"
                class="tactile-button primary-button calculate-button"
              >
                <span class="button-icon">üöÄ</span>
                <span class="button-text">–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å</span>
                <div class="button-ripple"></div>
              </button>
            </form>
            
            <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ -->
            <div id="calculation-result" class="calculation-result hidden">
              <div class="result-card">
                <div class="result-price">
                  <span id="price-value" class="price-number">25,000</span>
                  <span class="price-currency">‚ÇΩ</span>
                </div>
                <div class="result-description">–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏</div>
                
                <!-- –≠–¢–ê–ü 5: ACTION - –§–æ—Ä–º–∞ –ª–∏–¥–∞ -->
                <div class="lead-form-card">
                  <h4 class="lead-form-title">–ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç</h4>
                  <form id="lead-form" class="lead-form">
                    <div class="form-fields">
                      <input 
                        type="text" 
                        id="lead-name" 
                        name="name"
                        placeholder="–í–∞—à–µ –∏–º—è"
                        class="tactile-input"
                        required
                      >
                      <input 
                        type="tel" 
                        id="lead-phone" 
                        name="phone"
                        placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                        class="tactile-input"
                        required
                      >
                    </div>
                    
                    <!-- –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö (152-–§–ó) -->
                    <label class="consent-label">
                      <input 
                        type="checkbox" 
                        id="consent" 
                        name="consent"
                        checked 
                        required
                        class="consent-checkbox"
                      >
                      <span class="consent-text">
                        –Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å 
                        <a href="/privacy-policy.html" target="_blank" class="consent-link">
                          –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                        </a>
                        –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å 152-–§–ó –†–§
                      </span>
                    </label>
                    
                    <button 
                      type="submit" 
                      id="submit-lead"
                      class="tactile-button success-button lead-submit-button"
                      disabled
                    >
                      <span class="button-icon">üìû</span>
                      <span class="button-text">–ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç</span>
                    </button>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
      
      <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ -->
      <section class="value-propositions">
        <div class="container">
          <div class="section-header">
            <h2 class="section-title">–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å</h2>
            <p class="section-subtitle">–ú—ã —Ä–µ—à–∞–µ–º –≥–ª–∞–≤–Ω—ã–µ –±–æ–ª–∏ –ª–æ–≥–∏—Å—Ç–∏–∫–∏</p>
          </div>
          
          <div class="features-grid">
            <div class="feature-card tactile-card">
              <div class="feature-icon">üè¢</div>
              <h3 class="feature-title">–£–¥–∞–ª–µ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª –ª–æ–≥–∏—Å—Ç–∏–∫–∏</h3>
              <p class="feature-description">
                –°—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤–∞—à–∏–º —à—Ç–∞—Ç–Ω—ã–º –æ—Ç–¥–µ–ª–æ–º –ª–æ–≥–∏—Å—Ç–∏–∫–∏ –±–µ–∑ –∑–∞—Ç—Ä–∞—Ç –Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
              </p>
            </div>
            
            <div class="feature-card tactile-card">
              <div class="feature-icon">‚ö°</div>
              <h3 class="feature-title">–°–ø–æ—Ç-–∑–∞—è–≤–∫–∏ –¥–µ–Ω—å-–≤-–¥–µ–Ω—å</h3>
              <p class="feature-description">
                –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–¥–∞—á–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∑–∞ 2-3 —á–∞—Å–∞ –≤ –ú–æ—Å–∫–≤–µ –ø—Ä–∏ —Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä–∞—Ö
              </p>
            </div>
            
            <div class="feature-card tactile-card">
              <div class="feature-icon">üì¶</div>
              <h3 class="feature-title">–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã</h3>
              <p class="feature-description">
                –ó–Ω–∞–µ–º –≤—Å–µ —Ç–æ–Ω–∫–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å Wildberries, Ozon –∏ –¥—Ä—É–≥–∏–º–∏ –ø–ª–æ—â–∞–¥–∫–∞–º–∏
              </p>
            </div>
          </div>
        </div>
      </section>
    `;
  }
  
  private loadNonCriticalContent(): void {
    // –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    this.loadSocialProofs();
    this.loadTestimonials();
    this.loadFAQ();
  }
  
  private async loadSocialProofs(): Promise<void> {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤
  }
  
  private async loadTestimonials(): Promise<void> {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
  }
  
  private async loadFAQ(): Promise<void> {
    // –ó–∞–≥—Ä—É–∑–∫–∞ FAQ —Å–µ–∫—Ü–∏–∏
  }
  
  private detectBrowserCapabilities(): void {
    const capabilities = {
      webp: this.supportsWebP(),
      haptics: 'vibrate' in navigator,
      speech: 'speechSynthesis' in window,
      recognition: 'webkitSpeechRecognition' in window,
      serviceWorker: 'serviceWorker' in navigator,
      intersectionObserver: 'IntersectionObserver' in window
    };
    
    console.log('üîç –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±—Ä–∞—É–∑–µ—Ä–∞:', capabilities);
    this.analytics.trackEvent('browser_capabilities', capabilities);
  }
  
  private supportsWebP(): boolean {
    const canvas = document.createElement('canvas');
    canvas.width = 1;
    canvas.height = 1;
    return canvas.toDataURL('image/webp').indexOf('data:image/webp') === 0;
  }
  
  private showFallbackContent(): void {
    const mainContent = document.getElementById('main-content');
    if (mainContent) {
      mainContent.innerHTML = `
        <section class="fallback-section">
          <div class="container">
            <div class="fallback-card">
              <h2>üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞</h2>
              <p>–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏:</p>
                             <div class="contact-buttons">
                 <a href="tel:+79162720932" class="tactile-button primary-button">
                   üìû +7 (916) 272-09-32
                 </a>
                 <a href="https://wa.me/79162720932" class="tactile-button success-button">
                   üí¨ WhatsApp
                 </a>
                 <a href="https://t.me/avtogost77" class="tactile-button info-button">
                   üì± Telegram
                 </a>
                 <a href="mailto:avtogost77@gmail.com" class="tactile-button secondary-button">
                   ‚úâÔ∏è Email
                 </a>
               </div>
            </div>
          </div>
        </section>
      `;
    }
  }
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const appConfig: AppConfig = {
  apiUrl: import.meta.env.VITE_API_URL || '/api',
  openaiApiKey: import.meta.env.VITE_OPENAI_API_KEY,
  analyticsKey: import.meta.env.VITE_ANALYTICS_KEY,
  version: __APP_VERSION__,
  buildTime: __BUILD_TIME__,
  isDevelopment: import.meta.env.DEV
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new AvtoGostApp(appConfig);

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
declare global {
  interface Window {
    AvtoGostApp: AvtoGostApp;
  }
}

window.AvtoGostApp = app;

export default app;