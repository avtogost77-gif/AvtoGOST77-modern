/* =============================================================================
   JAVASCRIPT –î–õ–Ø –ó–ê–ú–û–†–û–ó–ö–ò –¶–ï–ù–´
   ============================================================================= */

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–∞
let currentCalculation = {
    price: 0,
    route: '',
    vehicle: '',
    distance: '',
    weight: '',
    volume: '',
    additionalServices: []
};

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∑–∞–º–æ—Ä–æ–∑–∫–∏ —Ü–µ–Ω—ã
function openPriceFreezeModal() {
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
    collectCalculationData();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.getElementById('priceFreezeModal');
    modal.style.display = 'flex';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
        modal.classList.add('show');
    }, 10);
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.body.style.overflow = 'hidden';
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closePriceFreezeModal() {
    const modal = document.getElementById('priceFreezeModal');
    modal.classList.remove('show');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    }, 300);
}

// –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
function collectCalculationData() {
    const priceElement = document.getElementById('priceDisplay');
    const vehicleElement = document.getElementById('vehicleDisplay');
    const distanceElement = document.getElementById('distanceDisplay');
    
    if (priceElement) {
        const priceText = priceElement.textContent;
        currentCalculation.price = extractPrice(priceText);
    }
    
    if (vehicleElement) {
        currentCalculation.vehicle = vehicleElement.textContent;
    }
    
    if (distanceElement) {
        currentCalculation.distance = distanceElement.textContent;
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    const form = document.getElementById('calculatorForm');
    if (form) {
        const formData = new FormData(form);
        currentCalculation.route = formData.get('route') || '';
        currentCalculation.weight = formData.get('weight') || '';
        currentCalculation.volume = formData.get('volume') || '';
        
        // –°–æ–±–∏—Ä–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
        const additionalServices = form.querySelectorAll('input[name="additionalServices"]:checked');
        currentCalculation.additionalServices = Array.from(additionalServices).map(service => service.value);
    }
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞
function extractPrice(priceText) {
    const match = priceText.match(/[\d\s]+/);
    if (match) {
        return parseInt(match[0].replace(/\s/g, ''));
    }
    return 0;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∑–∞–º–æ—Ä–æ–∑–∫–∏ —Ü–µ–Ω—ã
document.addEventListener('DOMContentLoaded', function() {
    const freezeForm = document.getElementById('priceFreezeForm');
    
    if (freezeForm) {
        freezeForm.addEventListener('submit', function(e) {
            e.preventDefault();
            handlePriceFreezeSubmit();
        });
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    const modal = document.getElementById('priceFreezeModal');
    if (modal) {
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                closePriceFreezeModal();
            }
        });
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closePriceFreezeModal();
        }
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
async function handlePriceFreezeSubmit() {
    const form = document.getElementById('priceFreezeForm');
    const submitBtn = document.getElementById('freezeSubmitBtn');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    submitBtn.innerHTML = '‚è≥ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º...';
    submitBtn.disabled = true;
    
    try {
        const formData = new FormData(form);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç–∞
        formData.append('calculationData', JSON.stringify(currentCalculation));
        formData.append('freezeType', 'price_freeze');
        formData.append('freezeDuration', '3_days');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        const response = await fetch('/api/price-freeze', {
            method: 'POST',
            body: formData
        });
        
        if (response.ok) {
            // –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
            showSuccessMessage();
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π PDF
            await generateExtendedPDF(formData);
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            setTimeout(() => {
                closePriceFreezeModal();
                resetForm(form);
            }, 2000);
            
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        showErrorMessage();
    } finally {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        submitBtn.innerHTML = 'üîí –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—É';
        submitBtn.disabled = false;
    }
}

// –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
function showSuccessMessage() {
    const submitBtn = document.getElementById('freezeSubmitBtn');
    submitBtn.innerHTML = '‚úÖ –¶–µ–Ω–∞ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!';
    submitBtn.style.background = 'linear-gradient(135deg, #059669 0%, #10b981 100%)';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification('‚úÖ –¶–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ 3 –¥–Ω—è! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ email.', 'success');
}

// –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
function showErrorMessage() {
    const submitBtn = document.getElementById('freezeSubmitBtn');
    submitBtn.innerHTML = '‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏';
    submitBtn.style.background = 'linear-gradient(135deg, #dc2626 0%, #ef4444 100%)';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º.', 'error');
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        submitBtn.innerHTML = 'üîí –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—É';
        submitBtn.style.background = 'linear-gradient(135deg, #059669 0%, #10b981 100%)';
    }, 3000);
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info') {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <div class="notification-content">
            <span class="notification-message">${message}</span>
            <button class="notification-close" onclick="this.parentElement.parentElement.remove()">√ó</button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#3b82f6'};
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        z-index: 10001;
        max-width: 400px;
        animation: slideInRight 0.3s ease;
    `;
    
    document.body.appendChild(notification);
    
    // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        if (notification.parentElement) {
            notification.remove();
        }
    }, 5000);
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ PDF
async function generateExtendedPDF(formData) {
    try {
        const response = await fetch('/api/generate-extended-pdf', {
            method: 'POST',
            body: formData
        });
        
        if (response.ok) {
            const blob = await response.blob();
            const url = window.URL.createObjectURL(blob);
            
            // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            const a = document.createElement('a');
            a.href = url;
            a.download = `–ö–ü_–ê–≤—Ç–æ–ì–û–°–¢_${new Date().toISOString().split('T')[0]}.pdf`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF:', error);
    }
}

// –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
function resetForm(form) {
    form.reset();
    const submitBtn = document.getElementById('freezeSubmitBtn');
    submitBtn.innerHTML = 'üîí –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—É';
    submitBtn.style.background = 'linear-gradient(135deg, #059669 0%, #10b981 100%)';
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
const priceFreezeStyle = document.createElement('style');
priceFreezeStyle.textContent = `
    @keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
`;
document.head.appendChild(priceFreezeStyle);
