// Simple freight cost estimator v1.0
// Uses flat rates just for lead generation; not a public offer.
document.addEventListener("DOMContentLoaded", () => {
  const form = document.querySelector("#freight-calc-form");
  const resultEl = document.querySelector("#freight-calc-result");

  if (!form) return;

  form.addEventListener("submit", e => {
    e.preventDefault();

    const type = form.elements["type"].value; // FTL or LTL
    const distance = parseFloat(form.elements["distance"].value) || 0;
    const weight = parseFloat(form.elements["weight"].value) || 0;

    let price = 0;
    if (type === "FTL") {
      // –¢–∞—Ä–∏—Ñ—ã –∑–∞ –∫–º –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¢–°
      const transportRates = {
        gazelle: 30,   // 30‚ÇΩ/–∫–º –¥–ª—è –≥–∞–∑–µ–ª–∏
        threeTon: 40,  // 40‚ÇΩ/–∫–º –¥–ª—è 3-—Ç–æ–Ω–Ω–∏–∫–∞
        fiveTon: 50,   // 50‚ÇΩ/–∫–º –¥–ª—è 5-—Ç–æ–Ω–Ω–∏–∫–∞  
        tenTon: 62,    // 62‚ÇΩ/–∫–º –¥–ª—è 10-—Ç–æ–Ω–Ω–∏–∫–∞
        truck: 70      // 70‚ÇΩ/–∫–º –¥–ª—è —Ñ—É—Ä—ã
      };
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¢–° –ø–æ –≤–µ—Å—É (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)
      let transportType = 'gazelle';
      if (weight > 1500) transportType = 'threeTon';
      if (weight > 3000) transportType = 'fiveTon';
      if (weight > 5000) transportType = 'tenTon';
      if (weight > 10000) transportType = 'truck';
      
      let baseRate = transportRates[transportType] || 30;
      
      // –ó–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã (—á–µ–º –º–µ–Ω—å—à–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ, —Ç–µ–º –¥–æ—Ä–æ–∂–µ)
      let zoneCoeff = 1.0;
      if (distance < 70) {
        zoneCoeff = 1.6;  // –ì–æ—Ä–æ–¥—Å–∫–∏–µ - —Å–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π
      } else if (distance < 200) {
        zoneCoeff = 1.4;  // –û–±–ª–∞—Å—Ç–Ω—ã–µ - –≤—ã—Å–æ–∫–∏–π
      } else if (distance < 400) {
        zoneCoeff = 1.3;  // –ú–µ–∂—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ - –ø–æ–≤—ã—à–µ–Ω–Ω—ã–π
      } else if (distance < 800) {
        zoneCoeff = 1.1;  // –°—Ä–µ–¥–Ω–µ–µ –ø–ª–µ—á–æ - –Ω–µ–±–æ–ª—å—à–∞—è –Ω–∞–¥–±–∞–≤–∫–∞
      } else {
        zoneCoeff = 1.0;  // –î–ª–∏–Ω–Ω–æ–µ –ø–ª–µ—á–æ - –±–∞–∑–æ–≤—ã–π
      }
      
      price = distance * baseRate * zoneCoeff;
    } else {
      // LTL ‚Äî —Ç–∞—Ä–∏—Ñ –∑–∞ –∫–≥*–∫–º
      const RATE_PER_KG_KM = 6.5; // ‚ÇΩ
      price = distance * weight * RATE_PER_KG_KM;
    }

    if (isNaN(price) || price <= 0) {
      resultEl.textContent = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.";
      return;
    }

    const formatted = price.toLocaleString("ru-RU", {
      style: "currency",
      currency: "RUB",
      maximumFractionDigits: 0
    });

    resultEl.innerHTML = `–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: <strong>${formatted}</strong><br/><small>* –¶–µ–Ω–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç–æ–π</small>`;

    // send lead to Telegram
    const message = `üì¶ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞\n–¢–∏–ø: ${type}\n–î–∏—Å—Ç–∞–Ω—Ü–∏—è: ${distance} –∫–º${type === "LTL" ? `\n–í–µ—Å: ${weight} –∫–≥` : ""}\n–¶–µ–Ω–∞ (—á–µ—Ä–Ω–æ–≤–∞—è): ${formatted}`;

    fetch(`https://api.telegram.org/bot79162720932:AAHAnyTyvfteW1WNKpns8w35jl14f0wn5es/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: 399711406, text: message })
    }).catch(() => {/* ignore errors */});

    // open modal and prefill details
    const modal = document.getElementById('lead-modal');
    document.getElementById('lead-details').value = `${type}, ${distance} –∫–º, ${type === 'LTL' ? weight + ' –∫–≥, ' : ''}–æ—Ä–∏–µ–Ω—Ç. ${formatted}`;

    modal.classList.add('open');
  });
});

// lead form submission
document.addEventListener('DOMContentLoaded', () => {
  const leadForm = document.getElementById('lead-form');
  if (!leadForm) return;
  leadForm.addEventListener('submit', e => {
    e.preventDefault();
    const fd = new FormData(leadForm);
    const name = fd.get('name');
    const phone = fd.get('phone');
    const email = fd.get('email');
    const details = fd.get('details');
    const text = `üìû –õ–∏–¥ —Å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞\n–ò–º—è: ${name}\n–¢–µ–ª: ${phone}\nEmail: ${email}\n${details}`;

    fetch(`https://api.telegram.org/bot79162720932:AAHAnyTyvfteW1WNKpns8w35jl14f0wn5es/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ chat_id: 399711406, text })
    });
    leadForm.innerHTML = '<p>–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>';
  });

  // close modal on overlay click
  document.getElementById('lead-modal').addEventListener('click', e => {
    if (e.target.classList.contains('modal-overlay')) {
      e.currentTarget.classList.remove('open');
    }
  });
});
