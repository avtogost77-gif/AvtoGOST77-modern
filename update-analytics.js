#!/usr/bin/env node
/**
 * üìä –ú–ê–°–°–û–í–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ê–ù–ê–õ–ò–¢–ò–ö–ò
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–¥—ã –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏ –∏ Google Analytics –Ω–∞ –≤—Å–µ—Ö HTML —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
 * –ó–∞–¥–∞—á–∞ –æ—Ç –£–Ω–∏–≤–µ—Ä—Å–∞–ª–∞-3000
 */

const fs = require('fs').promises;
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  // –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (–∏–∑ includes/analytics.html)
  YANDEX_METRIKA: '98832562',
  GOOGLE_ANALYTICS: 'G-EMQ3D0X8K7',
  
  // –°—Ç–∞—Ä—ã–µ –∫–æ–¥—ã –¥–ª—è –∑–∞–º–µ–Ω—ã
  OLD_YANDEX: '103413788',
  OLD_GOOGLE: 'G-BZZPY2YQPP',
  
  // –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
  patterns: {
    yandexMetrika: /ym\(\s*(\d+)\s*,\s*"init"/g,
    yandexNoscript: /mc\.yandex\.ru\/watch\/(\d+)/g,
    googleAnalytics: /gtag\s*\(\s*['"]config['"]\s*,\s*['"]([A-Z0-9-]+)['"]\s*\)/g,
    googleScript: /googletagmanager\.com\/gtag\/js\?id=([A-Z0-9-]+)/g
  }
};

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
let stats = {
  totalFiles: 0,
  processedFiles: 0,
  updatedFiles: 0,
  errors: 0,
  yandexUpdates: 0,
  googleUpdates: 0
};

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É –≤ HTML —Ñ–∞–π–ª–µ
 */
async function updateAnalyticsInFile(filePath) {
  try {
    let content = await fs.readFile(filePath, 'utf8');
    let originalContent = content;
    let changes = 0;
    
    // –ó–∞–º–µ–Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏
    content = content.replace(CONFIG.patterns.yandexMetrika, (match, id) => {
      if (id !== CONFIG.YANDEX_METRIKA) {
        changes++;
        stats.yandexUpdates++;
        console.log(`  üìä –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞: ${id} ‚Üí ${CONFIG.YANDEX_METRIKA}`);
        return `ym(${CONFIG.YANDEX_METRIKA}, "init"`;
      }
      return match;
    });
    
    content = content.replace(CONFIG.patterns.yandexNoscript, (match, id) => {
      if (id !== CONFIG.YANDEX_METRIKA) {
        changes++;
        return `mc.yandex.ru/watch/${CONFIG.YANDEX_METRIKA}`;
      }
      return match;
    });
    
    // –ó–∞–º–µ–Ω–∞ Google Analytics
    content = content.replace(CONFIG.patterns.googleAnalytics, (match, id) => {
      if (id !== CONFIG.GOOGLE_ANALYTICS) {
        changes++;
        stats.googleUpdates++;
        console.log(`  üìà Google Analytics: ${id} ‚Üí ${CONFIG.GOOGLE_ANALYTICS}`);
        return `gtag('config', '${CONFIG.GOOGLE_ANALYTICS}')`;
      }
      return match;
    });
    
    content = content.replace(CONFIG.patterns.googleScript, (match, id) => {
      if (id !== CONFIG.GOOGLE_ANALYTICS) {
        changes++;
        return `googletagmanager.com/gtag/js?id=${CONFIG.GOOGLE_ANALYTICS}`;
      }
      return match;
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    const hasYandex = content.includes('ym(') || content.includes('yandex.ru/metrika');
    const hasGoogle = content.includes('gtag(') || content.includes('googletagmanager.com');
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –¥–æ–±–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ include
    if (!hasYandex && !hasGoogle && content.includes('</head>')) {
      console.log(`  ‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É —á–µ—Ä–µ–∑ include`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ include
      if (!content.includes('includes/analytics.html')) {
        content = content.replace('</head>', `
  <!-- Analytics -->
  <!--#include virtual="/includes/analytics.html" -->
</head>`);
        changes++;
      }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º, –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (changes > 0) {
      await fs.writeFile(filePath, content, 'utf8');
      stats.updatedFiles++;
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: ${path.basename(filePath)} (${changes} –∏–∑–º–µ–Ω–µ–Ω–∏–π)`);
    }
    
    stats.processedFiles++;
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ ${filePath}:`, error.message);
    stats.errors++;
  }
}

/**
 * –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç –≤—Å–µ HTML —Ñ–∞–π–ª—ã
 */
async function findHtmlFiles(dir, fileList = []) {
  try {
    const files = await fs.readdir(dir);
    
    for (const file of files) {
      const filePath = path.join(dir, file);
      const stat = await fs.stat(filePath);
      
      if (stat.isDirectory()) {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–ø–∫–∏
        if (!file.startsWith('.') && file !== 'node_modules' && file !== 'test-deploy') {
          await findHtmlFiles(filePath, fileList);
        }
      } else if (file.endsWith('.html')) {
        fileList.push(filePath);
        stats.totalFiles++;
      }
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${dir}:`, error.message);
  }
  
  return fileList;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ—Ç—á–µ—Ç –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
 */
async function createReport() {
  const report = `# üìä –û–¢–ß–ï–¢ –û–ë –û–ë–ù–û–í–õ–ï–ù–ò–ò –ê–ù–ê–õ–ò–¢–ò–ö–ò

## –î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}

### üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
- **–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –Ω–∞–π–¥–µ–Ω–æ:** ${stats.totalFiles}
- **–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤:** ${stats.processedFiles}
- **–û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤:** ${stats.updatedFiles}
- **–û—à–∏–±–æ–∫:** ${stats.errors}

### üîÑ –ó–∞–º–µ–Ω—ã:
- **–Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞:** ${stats.yandexUpdates} –∑–∞–º–µ–Ω
  - –°—Ç–∞—Ä—ã–π –∫–æ–¥: ${CONFIG.OLD_YANDEX}
  - –ù–æ–≤—ã–π –∫–æ–¥: ${CONFIG.YANDEX_METRIKA}
  
- **Google Analytics:** ${stats.googleUpdates} –∑–∞–º–µ–Ω
  - –°—Ç–∞—Ä—ã–π –∫–æ–¥: ${CONFIG.OLD_GOOGLE}
  - –ù–æ–≤—ã–π –∫–æ–¥: ${CONFIG.GOOGLE_ANALYTICS}

### ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:
${stats.errors === 0 ? '–í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!' : `–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å ${stats.errors} –æ—à–∏–±–∫–∞–º–∏.`}

### üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—á–µ—Ç—á–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã –≤ –ª–∏—á–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–∞—Ö
3. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ—è–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 24 —á–∞—Å–æ–≤)

---
*–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–º update-analytics.js*
`;

  await fs.writeFile('ANALYTICS-UPDATE-REPORT.md', report, 'utf8');
  console.log('\nüìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ANALYTICS-UPDATE-REPORT.md');
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  console.log('üöÄ –ó–ê–ü–£–°–ö –ú–ê–°–°–û–í–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ò\n');
  console.log(`üìä –¶–µ–ª–µ–≤—ã–µ –∫–æ–¥—ã:`);
  console.log(`   –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞: ${CONFIG.YANDEX_METRIKA}`);
  console.log(`   Google Analytics: ${CONFIG.GOOGLE_ANALYTICS}\n`);
  
  // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ HTML —Ñ–∞–π–ª—ã
  console.log('üîç –ü–æ–∏—Å–∫ HTML —Ñ–∞–π–ª–æ–≤...');
  const htmlFiles = await findHtmlFiles(process.cwd());
  console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${htmlFiles.length}\n`);
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
  console.log('‚öôÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤:');
  for (const file of htmlFiles) {
    await updateAnalyticsInFile(file);
  }
  
  // –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
  console.log('\nüìä –ò–¢–û–ì–ò:');
  console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${stats.updatedFiles}/${stats.totalFiles}`);
  console.log(`üìà –ó–∞–º–µ–Ω –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏: ${stats.yandexUpdates}`);
  console.log(`üìà –ó–∞–º–µ–Ω Google Analytics: ${stats.googleUpdates}`);
  
  if (stats.errors > 0) {
    console.log(`‚ùå –û—à–∏–±–æ–∫: ${stats.errors}`);
  }
  
  // –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç
  await createReport();
  
  console.log('\n‚ú® –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫
main().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});