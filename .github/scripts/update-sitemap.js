const fs = require('fs');
const path = require('path');

// –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è sitemap
const PAGE_PRIORITIES = {
  'index.html': { priority: '1.0', changefreq: 'weekly' },
  'services.html': { priority: '0.9', changefreq: 'monthly' },
  'about.html': { priority: '0.8', changefreq: 'monthly' },
  'contact.html': { priority: '0.8', changefreq: 'monthly' },
  'help.html': { priority: '0.7', changefreq: 'monthly' },
  'routes/': { priority: '0.9', changefreq: 'weekly' }, // –ú–∞—Ä—à—Ä—É—Ç—ã –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
  'industries/': { priority: '0.8', changefreq: 'monthly' },
  'calculators/': { priority: '0.8', changefreq: 'weekly' },
  'cost/': { priority: '0.7', changefreq: 'monthly' },
  'blog/': { priority: '0.7', changefreq: 'weekly' },
  'default': { priority: '0.6', changefreq: 'monthly' }
};

// –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è sitemap
const EXCLUDE_PATTERNS = [
  '**/404.html',
  '**/AG77/**',
  '**/.github/**',
  '**/node_modules/**',
  '**/assets/**'
];

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function getPagePriority(filePath) {
  for (const [pattern, config] of Object.entries(PAGE_PRIORITIES)) {
    if (filePath.includes(pattern)) {
      return config;
    }
  }
  return PAGE_PRIORITIES.default;
}

// –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ HTML —Ñ–∞–π–ª–æ–≤ (–∑–∞–º–µ–Ω–∞ glob)
function findHtmlFiles(dir) {
  let htmlFiles = [];
  
  function searchDir(currentDir) {
    try {
      const items = fs.readdirSync(currentDir);
      
      for (const item of items) {
        const fullPath = path.join(currentDir, item);
        const stat = fs.statSync(fullPath);
        
        if (stat.isDirectory()) {
          // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
          if (EXCLUDE_PATTERNS.some(pattern => 
            pattern.includes(item) || 
            pattern.includes('**/' + item + '/**'))) {
            continue;
          }
          searchDir(fullPath);
        } else if (stat.isFile() && item.endsWith('.html')) {
          // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
          if (!EXCLUDE_PATTERNS.some(pattern => 
            pattern.includes(item) || 
            fullPath.includes(pattern.replace('**/','').replace('/**','')))) {
            htmlFiles.push(fullPath.replace('./', ''));
          }
        }
      }
    } catch (error) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
    }
  }
  
  searchDir(dir);
  return htmlFiles;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ø—É—Ç–∏
function generateURL(filePath) {
  let url = filePath;
  
  // –£–±–∏—Ä–∞–µ–º index.html –∏–∑ URL
  if (url.endsWith('/index.html')) {
    url = url.replace('/index.html', '/');
  }
  
  // –£–±–∏—Ä–∞–µ–º .html –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤
  if (url.endsWith('.html')) {
    url = url.replace('.html', '');
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—ç—à –≤ –∫–æ–Ω—Ü–µ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
  if (!url.endsWith('/') && !url.includes('.')) {
    url += '/';
  }
  
  return `https://avtogost77.ru/${url}`;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è sitemap
function updateSitemap() {
  console.log('üó∫Ô∏è –û–±–Ω–æ–≤–ª—è–µ–º sitemap.xml...');
  
  try {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ HTML —Ñ–∞–π–ª—ã
    const htmlFiles = findHtmlFiles('.');
    
    console.log(`üìÑ –ù–∞–π–¥–µ–Ω–æ ${htmlFiles.length} HTML —Ñ–∞–π–ª–æ–≤`);
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ —Ç–∏–ø–∞–º
    const pages = htmlFiles.map(filePath => {
      const normalizedPath = filePath.replace(/\\/g, '/');
      const config = getPagePriority(normalizedPath);
      const url = generateURL(normalizedPath);
      
      return {
        url,
        priority: config.priority,
        changefreq: config.changefreq,
        lastmod: new Date().toISOString().split('T')[0], // YYYY-MM-DD
        filePath: normalizedPath
      };
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É (–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–µ—Ä–≤—ã–º)
    pages.sort((a, b) => parseFloat(b.priority) - parseFloat(a.priority));
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º XML sitemap
    let sitemapXML = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    for (const page of pages) {
      sitemapXML += `
    <url>
        <loc>${page.url}</loc>
        <lastmod>${page.lastmod}</lastmod>
        <changefreq>${page.changefreq}</changefreq>
        <priority>${page.priority}</priority>
    </url>`;
    }
    
    sitemapXML += `
</urlset>`;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º sitemap.xml
            fs.writeFileSync('sitemap.xml', sitemapXML);
    console.log(`‚úÖ Sitemap –æ–±–Ω–æ–≤–ª–µ–Ω! –î–æ–±–∞–≤–ª–µ–Ω–æ ${pages.length} —Å—Ç—Ä–∞–Ω–∏—Ü`);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–∏–ø–∞–º —Å—Ç—Ä–∞–Ω–∏—Ü
    const stats = {
      routes: pages.filter(p => p.filePath.includes('routes/')).length,
      industries: pages.filter(p => p.filePath.includes('industries/')).length,
      calculators: pages.filter(p => p.filePath.includes('calculators/')).length,
      cost: pages.filter(p => p.filePath.includes('cost/')).length,
      blog: pages.filter(p => p.filePath.includes('blog/')).length,
      main: pages.filter(p => !p.filePath.includes('/') || p.filePath === 'index.html').length
    };
    
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ sitemap:');
    console.log(`   üõ£Ô∏è  –ú–∞—Ä—à—Ä—É—Ç—ã: ${stats.routes}`);
    console.log(`   üè≠ –û—Ç—Ä–∞—Å–ª–∏: ${stats.industries}`);
    console.log(`   üí∞ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã: ${stats.calculators}`);
    console.log(`   üí≥ "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç": ${stats.cost}`);
    console.log(`   üìù –ë–ª–æ–≥: ${stats.blog}`);
    console.log(`   üè† –û—Å–Ω–æ–≤–Ω—ã–µ: ${stats.main}`);
    
    // –°–æ–∑–¥–∞–µ–º robots.txt –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    const robotsTxt = `User-agent: *
Allow: /

# Sitemap
Sitemap: https://avtogost77.ru/sitemap.xml

# –£—Å–∫–æ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é –≤–∞–∂–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
Allow: /routes/
Allow: /industries/
Allow: /calculators/
Allow: /cost/

# –ë–ª–æ–∫–∏—Ä—É–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
Disallow: /assets/
Disallow: /.github/
Disallow: /node_modules/
Disallow: *.json
Disallow: *.md

# –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
Allow: /services
Allow: /about
Allow: /contact
Allow: /help
Allow: /blog/`;
    
            if (!fs.existsSync('robots.txt')) {
          fs.writeFileSync('robots.txt', robotsTxt);
      console.log('ü§ñ –°–æ–∑–¥–∞–Ω robots.txt');
    }
    
    return pages.length;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ sitemap:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
if (require.main === module) {
  updateSitemap();
}

module.exports = { updateSitemap };