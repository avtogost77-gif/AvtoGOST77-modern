const fs = require('fs');
const path = require('path');

// –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –±–∞–∑–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π
const REAL_DISTANCES = {
  'moskva-tula': 180,
  'moskva-kaluga': 165,
  'moskva-ryazan': 196,
  'moskva-vladimir': 184,
  'moskva-tver': 164,
  'moskva-yaroslavl': 264,
  'moskva-voronezh': 463,
  'moskva-belgorod': 695,
  'moskva-kursk': 512,
  'moskva-orel': 368,
  'moskva-bryansk': 379,
  'moskva-smolensk': 378,
  'moskva-spb': 635,
  'moskva-nizhniy-novgorod': 411,
  'moskva-kazan': 719,
  'moskva-penza': 630,
  'moskva-saransk': 641,
  'moskva-tambov': 460,
  'moskva-koledinovo': 25,
  'moskva-podolsk': 40,
  'moskva-belye-stolby': 50,
  'moskva-elektrostal': 58,
  'moskva-tver-ozon': 164
};

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ —Å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
const CITY_DATABASE = {
  "rybinsk": {
    name: "–†—ã–±–∏–Ω—Å–∫",
    region: "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    population: "190 —Ç—ã—Å—è—á —á–µ–ª–æ–≤–µ–∫",
    industries: ["–∞–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–≤–∏–≥–∞—Ç–µ–ª–∏", "—ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞", "–ø–∏—â–µ–≤–∞—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å"],
    landmarks: ["–†—ã–±–∏–Ω—Å–∫–æ–µ –≤–æ–¥–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–µ", "–í–æ–ª–∂—Å–∫–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è", "–°–ø–∞—Å–æ-–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å–∫–∏–π —Å–æ–±–æ—Ä"],
    transport: "–≤–∞–∂–Ω–∞—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –∞—Ä—Ç–µ—Ä–∏—è –º–µ–∂–¥—É –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –†–æ—Å—Å–∏–µ–π –∏ —Å–µ–≤–µ—Ä–Ω—ã–º–∏ —Ä–µ–≥–∏–æ–Ω–∞–º–∏",
    uniqueFeatures: "–∫—Ä—É–ø–Ω–µ–π—à–∏–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä –Ø—Ä–æ—Å–ª–∞–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
    description: "–†—ã–±–∏–Ω—Å–∫, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–π –Ω–∞ –±–µ—Ä–µ–≥—É –†—ã–±–∏–Ω—Å–∫–æ–≥–æ –≤–æ–¥–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–∞, —è–≤–ª—è–µ—Ç—Å—è –∫—Ä—É–ø–Ω–µ–π—à–∏–º –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–º —Ü–µ–Ω—Ç—Ä–æ–º –Ø—Ä–æ—Å–ª–∞–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. –ì–æ—Ä–æ–¥ —Å–ª–∞–≤–∏—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º –∞–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π, —ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –ø–∏—â–µ–≤–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏."
  },
  
  "murom": {
    name: "–ú—É—Ä–æ–º",
    region: "–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", 
    population: "110 —Ç—ã—Å—è—á —á–µ–ª–æ–≤–µ–∫",
    industries: ["—Ä–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞", "–ø—Ä–∏–±–æ—Ä–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ", "—Ç–µ–∫—Å—Ç–∏–ª—å–Ω–∞—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å"],
    landmarks: ["–°–ø–∞—Å–æ-–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å–∫–∏–π –º–æ–Ω–∞—Å—Ç—ã—Ä—å", "–¢—Ä–æ–∏—Ü–∫–∏–π –º–æ–Ω–∞—Å—Ç—ã—Ä—å", "–Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è –û–∫–∏"],
    transport: "–≤–∞–∂–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π —É–∑–µ–ª –í–ª–∞–¥–∏–º–∏—Ä—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
    uniqueFeatures: "–æ–¥–∏–Ω –∏–∑ –¥—Ä–µ–≤–Ω–µ–π—à–∏—Ö –≥–æ—Ä–æ–¥–æ–≤ –†–æ—Å—Å–∏–∏, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –≤ 862 –≥–æ–¥—É",
    description: "–ú—É—Ä–æ–º, –æ–¥–∏–Ω –∏–∑ –¥—Ä–µ–≤–Ω–µ–π—à–∏—Ö –≥–æ—Ä–æ–¥–æ–≤ –†–æ—Å—Å–∏–∏, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –≤ 862 –≥–æ–¥—É, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ –ª–µ–≤–æ–º –±–µ—Ä–µ–≥—É —Ä–µ–∫–∏ –û–∫–∏. –ì–æ—Ä–æ–¥ –∏–∑–≤–µ—Å—Ç–µ–Ω –Ω–µ —Ç–æ–ª—å–∫–æ –±–æ–≥–∞—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π, –Ω–æ –∏ —Ä–∞–∑–≤–∏—Ç–æ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å—é."
  },
  
  "kovrov": {
    name: "–ö–æ–≤—Ä–æ–≤",
    region: "–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    population: "140 —Ç—ã—Å—è—á —á–µ–ª–æ–≤–µ–∫", 
    industries: ["—Å—Ç—Ä–µ–ª–∫–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ", "–≤–æ–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "—Ç–æ—á–Ω–æ–µ –º–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ"],
    landmarks: ["—Ä–µ–∫–∞ –ö–ª—è–∑—å–º–∞", "–ö–æ–≤—Ä–æ–≤—Å–∫–∏–π –∏—Å—Ç–æ—Ä–∏–∫–æ-–º–µ–º–æ—Ä–∏–∞–ª—å–Ω—ã–π –º—É–∑–µ–π"],
    transport: "—Ä–∞–∑–≤–∏—Ç–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –í–ª–∞–¥–∏–º–∏—Ä—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
    uniqueFeatures: "–∫—Ä—É–ø–Ω—ã–π —Ü–µ–Ω—Ç—Ä –æ–±–æ—Ä–æ–Ω–Ω–æ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –†–æ—Å—Å–∏–∏",
    description: "–ö–æ–≤—Ä–æ–≤, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–π –Ω–∞ —Ä–µ–∫–µ –ö–ª—è–∑—å–º–µ, —è–≤–ª—è–µ—Ç—Å—è –∫—Ä—É–ø–Ω—ã–º —Ü–µ–Ω—Ç—Ä–æ–º –æ–±–æ—Ä–æ–Ω–Ω–æ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –†–æ—Å—Å–∏–∏. –ì–æ—Ä–æ–¥ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ —Å—Ç—Ä–µ–ª–∫–æ–≤–æ–≥–æ –æ—Ä—É–∂–∏—è –∏ –≤–æ–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏."
  }
};

// –ù–û–í–´–ï –ì–û–†–û–î–ê –î–õ–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò
const NEW_CITIES = {
  "moskva": {
    name: "–ú–æ—Å–∫–≤–∞",
    nameTo: "–ú–æ—Å–∫–≤—ã", 
    nameFrom: "–∏–∑ –ú–æ—Å–∫–≤—ã",
    region: "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    newDestinations: [
      "ivanovo", "kostroma", "lipetsk", "tambov", "rybinsk", 
      "vladimir", "murom", "kovrov", "gusev", "aleksandrov"
    ]
  }
};

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –≥–æ—Ä–æ–¥–µ
function getCityData(cityName) {
  if (CITY_DATABASE[cityName]) {
    return CITY_DATABASE[cityName];
  }
  
  // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
  return {
    name: cityName.charAt(0).toUpperCase() + cityName.slice(1),
    region: "–†–æ—Å—Å–∏–π—Å–∫–∞—è –§–µ–¥–µ—Ä–∞—Ü–∏—è",
    population: "–≥–æ—Ä–æ–¥",
    industries: ["–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å", "—Ç–æ—Ä–≥–æ–≤–ª—è", "—É—Å–ª—É–≥–∏"],
    landmarks: ["–≥–æ—Ä–æ–¥—Å–∫–∏–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"],
    transport: "—Ä–∞–∑–≤–∏—Ç–∞—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞",
    uniqueFeatures: "–≤–∞–∂–Ω—ã–π —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä",
    description: cityName.charAt(0).toUpperCase() + cityName.slice(1) + " - –≤–∞–∂–Ω—ã–π –≥–æ—Ä–æ–¥ —Å —Ä–∞–∑–≤–∏—Ç–æ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å—é –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π."
  };
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
function getRealDistance(fromCity, toCity) {
  const key = fromCity + "-" + toCity;
  const reverseKey = toCity + "-" + fromCity;
  
  if (REAL_DISTANCES[key]) {
    return REAL_DISTANCES[key];
  }
  if (REAL_DISTANCES[reverseKey]) {
    return REAL_DISTANCES[reverseKey];
  }
  
  // –ü—Ä–∏–º–µ—Ä–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
  return Math.floor(Math.random() * 500) + 200;
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
function ensureDir(dirPath) {
  if (!fs.existsSync(dirPath)) {
    fs.mkdirSync(dirPath, { recursive: true });
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π - –±–µ–∑ —É–ø–∞–∫–æ–≤–∫–∏)
function generateUniqueServices(cityData) {
  const industryServices = {
    "–∞–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–≤–∏–≥–∞—Ç–µ–ª–∏": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∞–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤",
    "—ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞": "–ê–Ω—Ç–∏—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏", 
    "–ø–∏—â–µ–≤–∞—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å": "–†–µ—Ñ—Ä–∏–∂–µ—Ä–∞—Ç–æ—Ä—ã –¥–ª—è –ø–∏—â–µ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤",
    "—Å—Ç—Ä–µ–ª–∫–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ä—É–∂–∏—è",
    "–≤–æ–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞": "–¢—è–∂–µ–ª–æ–≤–µ—Å–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏ –≤–æ–µ–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
    "—Ä–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ä–∞–¥–∏–æ—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
    "–ø—Ä–∏–±–æ—Ä–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ": "–î–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ—á–Ω—ã—Ö –ø—Ä–∏–±–æ—Ä–æ–≤ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
    "—Ç–µ–∫—Å—Ç–∏–ª—å–Ω–∞—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å": "–ü–µ—Ä–µ–≤–æ–∑–∫–∞ —Ç–µ–∫—Å—Ç–∏–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"
  };
  
  const services = [
    "üöõ –ì—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏ –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤ –≥—Ä—É–∑–æ–≤",
    "üè™ –ü–æ–≥—Ä—É–∑–∫–∞ –∏ –≤—ã–≥—Ä—É–∑–∫–∞ —Å –ø–æ–º–æ—â—å—é —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∏",
    "üõ°Ô∏è –ü–æ–ª–Ω–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –≥—Ä—É–∑–∞",
    "üì± –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
    "‚ö° –°—Ä–æ—á–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤"
  ];
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ —É—Å–ª—É–≥–∏
  cityData.industries.forEach(function(industry) {
    if (industryServices[industry]) {
      services.push("üîß " + industryServices[industry]);
    }
  });
  
  return services;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
function generateNewRouteContent(fromCity, toCity, distance, price) {
  const cityData = getCityData(toCity);
  const toCityName = cityData.name;
  
  return {
    title: "–ì—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏ " + fromCity + " ‚Äî " + toCityName + " | –ê–≤—Ç–æ–ì–û–°–¢",
    description: "–ì—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏ –∏–∑ " + fromCity + " –≤ " + toCityName + ". –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ " + distance + " –∫–º. –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞, —á–µ—Å—Ç–Ω—ã–µ —Ü–µ–Ω—ã, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ 24/7.",
    content: 
      "<h1>–ì—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏ " + fromCity + " ‚Äî " + toCityName + "</h1>" +
      
      "<div class=\"route-info\">" +
        "<div class=\"route-details\">" +
          "<div class=\"detail-item\">" +
            "<span class=\"icon\">üìè</span>" +
            "<span>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ~" + distance + " –∫–º</span>" +
          "</div>" +
          "<div class=\"detail-item\">" +
            "<span class=\"icon\">‚è±Ô∏è</span>" +
            "<span>–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: " + (distance < 300 ? '6-12 —á–∞—Å–æ–≤' : distance < 600 ? '1-2 –¥–Ω—è' : '2-3 –¥–Ω—è') + "</span>" +
          "</div>" +
          "<div class=\"detail-item\">" +
            "<span class=\"icon\">üí∞</span>" +
            "<span>–°—Ç–æ–∏–º–æ—Å—Ç—å: –æ—Ç " + price.toLocaleString() + " ‚ÇΩ</span>" +
          "</div>" +
        "</div>" +
      "</div>" +
      
      "<div class=\"city-description\">" +
        "<h2>–û –≥–æ—Ä–æ–¥–µ " + toCityName + "</h2>" +
        "<p>" + cityData.description + "</p>" +
        "<p>" + toCityName + " —è–≤–ª—è–µ—Ç—Å—è " + cityData.uniqueFeatures + ". –ì–æ—Ä–æ–¥ –∏–∑–≤–µ—Å—Ç–µ–Ω –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º " + cityData.industries.join(', ') + ".</p>" +
      "</div>" +
      
      "<div class=\"route-features\">" +
        "<h2>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –º–∞—Ä—à—Ä—É—Ç–∞ " + fromCity + " ‚Äî " + toCityName + "</h2>" +
        "<p>–ú–∞—Ä—à—Ä—É—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ " + cityData.region + " —Å —É—á–µ—Ç–æ–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π " + cityData.transport + ". –ú—ã —É—á–∏—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –º–µ—Å—Ç–Ω–æ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–æ—Ä–æ–∂–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã.</p>" +
      "</div>" +
      
      "<div class=\"services-section\">" +
        "<h2>–£—Å–ª—É–≥–∏ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–µ</h2>" +
        "<div class=\"services-grid\">" +
          generateUniqueServices(cityData).map(function(service) {
            const parts = service.split(' ');
            return "<div class=\"service-card\">" +
              "<h3>" + parts[0] + "</h3>" +
              "<p>" + parts.slice(1).join(' ') + "</p>" +
            "</div>";
          }).join('') +
        "</div>" +
      "</div>" +
      
      "<div class=\"advantages-section\">" +
        "<h2>–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å</h2>" +
        "<ul>" +
          "<li>–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–≤—Ç–æ–ø–∞—Ä–∫ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏</li>" +
          "<li>–û–ø—ã—Ç–Ω—ã–µ –≤–æ–¥–∏—Ç–µ–ª–∏ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º</li>" +
          "<li>–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤</li>" +
          "<li>–ó–Ω–∞–Ω–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –¥–æ—Ä–æ–∂–Ω–æ–π —Å–µ—Ç–∏ " + cityData.region + "</li>" +
          "<li>–û–ø—ã—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã " + toCityName + "</li>" +
          "<li>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –ø–µ—Ä–µ–≤–æ–∑–∫–∞—Ö –≤ " + toCityName + " (" + cityData.population + ")</li>" +
        "</ul>" +
      "</div>" +
      
      "<div class=\"faq-section\">" +
        "<h2>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>" +
        "<div class=\"faq-item\">" +
          "<h3>–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ " + fromCity + " –≤ " + toCityName + "?</h3>" +
          "<p>–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç " + (distance < 300 ? '6-12 —á–∞—Å–æ–≤' : distance < 600 ? '1-2 –¥–Ω—è' : '2-3 –¥–Ω—è') + ". –£—á–∏—Ç—ã–≤–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ " + cityData.transport + ", –º—ã –ø–ª–∞–Ω–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç —Å —É—á–µ—Ç–æ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –¥–æ—Ä–æ–≥.</p>" +
        "</div>" +
        "<div class=\"faq-item\">" +
          "<h3>–ö–∞–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ " + toCityName + "?</h3>" +
          "<p>" + toCityName + " —è–≤–ª—è–µ—Ç—Å—è " + cityData.uniqueFeatures + ". –ú—ã —É—á–∏—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –º–µ—Å—Ç–Ω–æ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–æ—Ä–æ–∂–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã " + cityData.region + ".</p>" +
        "</div>" +
        "<div class=\"faq-item\">" +
          "<h3>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ " + toCityName + "?</h3>" +
          "<p>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ " + distance + " –∫–º –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—Ç " + price.toLocaleString() + " ‚ÇΩ. –¶–µ–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ –≥—Ä—É–∑–∞, –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–∞ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞ " + cityData.industries.join(' –∏ ') + ".</p>" +
        "</div>" +
      "</div>"
  };
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –¥–ª—è –Ω–æ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
function generateNewRouteHTML(fromCity, toCity, distance, price, content) {
  const cityData = getCityData(toCity);
  const toCityName = cityData.name;
  
  return "<!DOCTYPE html>" +
"<html lang=\"ru\">" +
"<head>" +
    "<meta charset=\"UTF-8\">" +
    "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">" +
    "<title>" + content.title + "</title>" +
    "<meta name=\"description\" content=\"" + content.description + "\">" +
    "<meta name=\"keywords\" content=\"–≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏, " + fromCity + ", " + toCityName + ", –¥–æ—Å—Ç–∞–≤–∫–∞ –≥—Ä—É–∑–æ–≤, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è\">" +
    "<link rel=\"canonical\" href=\"https://avtogost77.ru/routes/" + fromCity + "/" + fromCity + "-" + toCity + "/\">" +
    "<link rel=\"stylesheet\" href=\"../../assets/css/styles-optimized.css\">" +
    
    "<!-- Open Graph -->" +
    "<meta property=\"og:title\" content=\"" + content.title + "\">" +
    "<meta property=\"og:description\" content=\"" + content.description + "\">" +
    "<meta property=\"og:url\" content=\"https://avtogost77.ru/routes/" + fromCity + "/" + fromCity + "-" + toCity + "/\">" +
    "<meta property=\"og:type\" content=\"website\">" +
    "<meta property=\"og:site_name\" content=\"–ê–≤—Ç–æ–ì–û–°–¢\">" +
    
    "<!-- Twitter Card -->" +
    "<meta name=\"twitter:card\" content=\"summary\">" +
    "<meta name=\"twitter:title\" content=\"" + content.title + "\">" +
    "<meta name=\"twitter:description\" content=\"" + content.description + "\">" +
    
    "<!-- Schema.org -->" +
    "<script type=\"application/ld+json\">" +
    "{" +
      "\"@context\": \"https://schema.org\"," +
      "\"@type\": \"Service\"," +
      "\"name\": \"–ì—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏ " + fromCity + " ‚Äî " + toCityName + "\"," +
      "\"description\": \"" + content.description + "\"," +
      "\"provider\": {" +
        "\"@type\": \"Organization\"," +
        "\"name\": \"–ê–≤—Ç–æ–ì–û–°–¢\"," +
        "\"url\": \"https://avtogost77.ru\"," +
        "\"telephone\": \"+7 (495) 123-45-67\"," +
        "\"email\": \"info@avtogost77.ru\"" +
      "}," +
      "\"areaServed\": {" +
        "\"@type\": \"Place\"," +
        "\"name\": \"" + toCityName + "\"," +
        "\"address\": {" +
          "\"@type\": \"PostalAddress\"," +
          "\"addressRegion\": \"" + cityData.region + "\"," +
          "\"addressCountry\": \"RU\"" +
        "}" +
      "}," +
      "\"serviceType\": \"–ì—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏\"," +
      "\"priceRange\": \"–æ—Ç " + price.toLocaleString() + " ‚ÇΩ\"," +
      "\"url\": \"https://avtogost77.ru/routes/" + fromCity + "/" + fromCity + "-" + toCity + "/\"" +
    "}" +
    "</script>" +
"</head>" +
"<body>" +
    "<header class=\"header\">" +
        "<div class=\"container\">" +
            "<div class=\"header-content\">" +
                "<div class=\"logo\">" +
                    "<a href=\"../../index.html\" class=\"logo-link\">" +
                        "üöõ <span class=\"logo-text\">–ê–≤—Ç–æ–ì–û–°–¢</span>" +
                    "</a>" +
                "</div>" +
                "<nav class=\"nav\">" +
                    "<a href=\"../../about.html\" class=\"nav-link\">–û –Ω–∞—Å</a>" +
                    "<a href=\"../../services.html\" class=\"nav-link\">–£—Å–ª—É–≥–∏</a>" +
                    "<a href=\"../../index.html#calculator\" class=\"nav-link\">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</a>" +
                    "<a href=\"../../contact.html\" class=\"nav-link\">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>" +
                "</nav>" +
            "</div>" +
        "</div>" +
    "</header>" +

    "<main class=\"main\">" +
        "<div class=\"container\">" +
            content.content +
            
            "<div class=\"cta-section\">" +
                "<h2>–ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É</h2>" +
                "<p>–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏</p>" +
                "<a href=\"../../contact.html\" class=\"btn btn-primary\">–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</a>" +
            "</div>" +
        "</div>" +
    "</main>" +

    "<footer class=\"footer\">" +
        "<div class=\"container\">" +
            "<div class=\"footer-content\">" +
                "<div class=\"footer-section\">" +
                    "<h3>–ê–≤—Ç–æ–ì–û–°–¢</h3>" +
                    "<p>–ù–∞–¥–µ–∂–Ω—ã–µ –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏ –ø–æ –†–æ—Å—Å–∏–∏</p>" +
                "</div>" +
                "<div class=\"footer-section\">" +
                    "<h3>–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>" +
                    "<p>üìû +7 (495) 123-45-67</p>" +
                    "<p>üìß info@avtogost77.ru</p>" +
                "</div>" +
            "</div>" +
        "</div>" +
    "</footer>" +
"</body>" +
"</html>";
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
async function generateNewRoutes() {
  const pagesCount = parseInt(process.env.PAGES_COUNT) || 10;
  console.log("üöÄ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º " + pagesCount + " –ù–û–í–´–• –º–∞—Ä—à—Ä—É—Ç–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º...");
  
  let generatedCount = 0;
  let skippedCount = 0;
  
  for (const fromCity in NEW_CITIES) {
    if (generatedCount >= pagesCount) break;
    
    const cityData = NEW_CITIES[fromCity];
    ensureDir("routes/" + fromCity);
    
    for (let i = 0; i < cityData.newDestinations.length; i++) {
      if (generatedCount >= pagesCount) break;
      
      const toCity = cityData.newDestinations[i];
      const filename = "routes/" + fromCity + "/" + fromCity + "-" + toCity + ".html";
      
      // –ü–†–û–í–ï–†–Ø–ï–ú: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
      if (fs.existsSync(filename)) {
        console.log("‚ö†Ô∏è –ü–†–û–ü–£–°–ö: " + filename + " —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
        skippedCount++;
        continue;
      }
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
      const distance = getRealDistance(fromCity, toCity);
      const basePrice = distance < 300 ? 15000 : distance < 800 ? 25000 : Math.round(distance * 45);
      
      const content = generateNewRouteContent(fromCity, toCity, distance, basePrice);
      const html = generateNewRouteHTML(fromCity, toCity, distance, basePrice, content);
      
      fs.writeFileSync(filename, html);
      
      generatedCount++;
      console.log("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ù–û–í–ê–Ø —Å—Ç—Ä–∞–Ω–∏—Ü–∞: " + filename + " (" + distance + "–∫–º, –æ—Ç " + basePrice.toLocaleString() + "‚ÇΩ)");
    }
  }
  
  console.log("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ì–ï–ù–ï–†–ê–¶–ò–ò:");
  console.log("‚úÖ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: " + generatedCount);
  console.log("‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö: " + skippedCount);
  console.log("üéØ –¶–µ–ª—å: " + pagesCount + " —Å—Ç—Ä–∞–Ω–∏—Ü");
  
  if (generatedCount === 0) {
    console.log("\nüí° –í–°–ï –ú–ê–†–®–†–£–¢–´ –£–ñ–ï –°–£–©–ï–°–¢–í–£–Æ–¢!");
    console.log("–î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ –≥–æ—Ä–æ–¥–∞ –≤ NEW_CITIES –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.");
  }
  
  return generatedCount;
}

// –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
if (require.main === module) {
  generateNewRoutes().catch(function(error) {
    console.error("‚ùå –û—à–∏–±–∫–∞:", error);
    process.exit(1);
  });
}

module.exports = { generateNewRoutes, NEW_CITIES };