version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: avtogost77_crm_postgres
    environment:
      POSTGRES_DB: avtogost77_crm
      POSTGRES_USER: avtogost77
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - crm_network
    restart: unless-stopped

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: avtogost77_crm_redis
    ports:
      - "6379:6379"
    networks:
      - crm_network
    restart: unless-stopped

  # Backend API (Python FastAPI)
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: avtogost77_crm_backend
    environment:
      - DATABASE_URL=postgresql://avtogost77:${POSTGRES_PASSWORD}@postgres:5432/avtogost77_crm
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    volumes:
      - ../backend:/app
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - crm_network
    restart: unless-stopped

  # Frontend (React)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: avtogost77_crm_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - crm_network
    restart: unless-stopped

  # Nginx для проксирования
  nginx:
    image: nginx:alpine
    container_name: avtogost77_crm_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - crm_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  crm_network:
    driver: bridge
